!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABP	src/main.c	35;"	d	file:
ABP_METHOD	inc/config.h	12;"	d
AESAUX	src/aes.c	/^u4_t AESAUX[16\/sizeof(u4_t)];$/;"	v
AESKEY	src/aes.c	/^u4_t AESKEY[11*16\/sizeof(u4_t)];$/;"	v
AES_CTR	inc/oslmic.h	228;"	d
AES_DEC	inc/oslmic.h	226;"	d
AES_ENC	inc/oslmic.h	225;"	d
AES_MIC	inc/oslmic.h	227;"	d
AES_MICNOAUX	inc/oslmic.h	229;"	d
AES_MICSUB	src/aes.c	30;"	d	file:
AES_expr	src/aes.c	212;"	d	file:
AES_expr4	src/aes.c	207;"	d	file:
AES_key4	src/aes.c	202;"	d	file:
AESaux	inc/oslmic.h	87;"	d
AESkey	inc/oslmic.h	86;"	d
AIRTIME_BCN	inc/lorabase.h	/^enum { AIRTIME_BCN       = 144384 };  \/\/ micros$/;"	e	enum:__anon64
AIRTIME_BCN	inc/lorabase.h	/^enum { AIRTIME_BCN       = 72192 };  \/\/ micros$/;"	e	enum:__anon78
AIRTIME_BCN_osticks	src/lmic.c	50;"	d	file:
APPEUI	src/main.c	/^static  u1_t APPEUI[8]  = { 0xD5, 0x73, 0x03, 0xD0, 0x7E, 0xD5, 0xB3, 0x70 };$/;"	v	file:
APPSKEY	src/main.c	/^static  u1_t APPSKEY[16] = { 0x9E, 0x3B, 0x6E, 0x84, 0x0D, 0xCE, 0xCA, 0x5E, 0x68, 0x85, 0x9B, 0xB9, 0xD0, 0x00, 0x10, 0xEB }; \/* ABP *\/$/;"	v	file:
AS	Makefile	/^AS = avr-gcc$/;"	m
ASFLAGS	Makefile	/^ASFLAGS = -m$(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections$/;"	m
ASM_SOURCES	Makefile	/^ASM_SOURCES =  \\$/;"	m
ASSERT	inc/oslmic.h	58;"	d
ASSERT	inc/oslmic.h	60;"	d
AS_DEFS	Makefile	/^AS_DEFS = $/;"	m
AS_INCLUDES	Makefile	/^AS_INCLUDES = $/;"	m
BAND_AUX	inc/lmic.h	/^enum { BAND_MILLI=0, BAND_CENTI=1, BAND_DECI=2, BAND_AUX=3 };$/;"	e	enum:__anon26
BAND_CENTI	inc/lmic.h	/^enum { BAND_MILLI=0, BAND_CENTI=1, BAND_DECI=2, BAND_AUX=3 };$/;"	e	enum:__anon26
BAND_DECI	inc/lmic.h	/^enum { BAND_MILLI=0, BAND_CENTI=1, BAND_DECI=2, BAND_AUX=3 };$/;"	e	enum:__anon26
BAND_MILLI	inc/lmic.h	/^enum { BAND_MILLI=0, BAND_CENTI=1, BAND_DECI=2, BAND_AUX=3 };$/;"	e	enum:__anon26
BAUD_PRESCALLE	inc/hal.h	48;"	d
BCN_FULL	inc/lmic.h	/^       BCN_FULL    = 0x02,   \/\/!< Full beacon decoded$/;"	e	enum:__anon21
BCN_GUARD_ms	inc/lorabase.h	/^enum { BCN_GUARD_ms      = 3000 };   \/\/ end of beacon period to prevent interference with beacon$/;"	e	enum:__anon45
BCN_GUARD_osticks	src/lmic.c	48;"	d	file:
BCN_GUARD_us	inc/lorabase.h	/^enum { BCN_GUARD_us      = 3000000 };$/;"	e	enum:__anon49
BCN_INTV_exp	inc/lorabase.h	/^enum { BCN_INTV_exp      = 7 };$/;"	e	enum:__anon40
BCN_INTV_ms	inc/lorabase.h	/^enum { BCN_INTV_ms       = BCN_INTV_sec*1000L };$/;"	e	enum:__anon42
BCN_INTV_osticks	src/lmic.c	39;"	d	file:
BCN_INTV_sec	inc/lorabase.h	/^enum { BCN_INTV_sec      = 1<<BCN_INTV_exp };$/;"	e	enum:__anon41
BCN_INTV_us	inc/lorabase.h	/^enum { BCN_INTV_us       = BCN_INTV_ms*1000L };$/;"	e	enum:__anon43
BCN_NODDIFF	inc/lmic.h	/^       BCN_NODDIFF = 0x08 }; \/\/!< No differential drift measured yet$/;"	e	enum:__anon21
BCN_NODRIFT	inc/lmic.h	/^       BCN_NODRIFT = 0x04,   \/\/!< No drift value measured yet$/;"	e	enum:__anon21
BCN_NONE	inc/lmic.h	/^enum { BCN_NONE    = 0x00,   \/\/!< No beacon received$/;"	e	enum:__anon21
BCN_PARTIAL	inc/lmic.h	/^       BCN_PARTIAL = 0x01,   \/\/!< Only first (common) part could be decoded (info,lat,lon invalid\/previous)$/;"	e	enum:__anon21
BCN_RESERVE_ms	inc/lorabase.h	/^enum { BCN_RESERVE_ms    = 2120 };   \/\/ space reserved for beacon and NWK management$/;"	e	enum:__anon44
BCN_RESERVE_osticks	src/lmic.c	47;"	d	file:
BCN_RESERVE_us	inc/lorabase.h	/^enum { BCN_RESERVE_us    = 2120000 };$/;"	e	enum:__anon48
BCN_SLOT_SPAN_ms	inc/lorabase.h	/^enum { BCN_SLOT_SPAN_ms  =   30 };   \/\/ 2^12 reception slots a this span$/;"	e	enum:__anon46
BCN_SLOT_SPAN_us	inc/lorabase.h	/^enum { BCN_SLOT_SPAN_us  =   30000 };$/;"	e	enum:__anon50
BCN_WINDOW_ms	inc/lorabase.h	/^enum { BCN_WINDOW_ms     = BCN_INTV_ms-(int)BCN_GUARD_ms-(int)BCN_RESERVE_ms };$/;"	e	enum:__anon47
BCN_WINDOW_osticks	src/lmic.c	49;"	d	file:
BUILD_DIR	Makefile	/^BUILD_DIR = build$/;"	m
BW125	inc/lorabase.h	/^enum _bw_t { BW125=0, BW250, BW500, BWrfu };$/;"	e	enum:_bw_t
BW250	inc/lorabase.h	/^enum _bw_t { BW125=0, BW250, BW500, BWrfu };$/;"	e	enum:_bw_t
BW500	inc/lorabase.h	/^enum _bw_t { BW125=0, BW250, BW500, BWrfu };$/;"	e	enum:_bw_t
BWrfu	inc/lorabase.h	/^enum _bw_t { BW125=0, BW250, BW500, BWrfu };$/;"	e	enum:_bw_t
CC	Makefile	/^CC = avr-gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = $(OPT)  -Wall -fdata-sections -ffunction-sections$/;"	m
CHAR_NEWLINE	inc/gps.h	21;"	d
CHAR_RETURN	inc/gps.h	22;"	d
CHNL_BCN	inc/lorabase.h	/^enum { CHNL_BCN          = 0 }; \/\/ used only for default init of state (rotating beacon scheme)$/;"	e	enum:__anon76
CHNL_BCN	inc/lorabase.h	/^enum { CHNL_BCN          = 5 };$/;"	e	enum:__anon61
CHNL_DNW2	inc/lorabase.h	/^enum { CHNL_DNW2         = 0 };$/;"	e	enum:__anon73
CHNL_DNW2	inc/lorabase.h	/^enum { CHNL_DNW2         = 5 };$/;"	e	enum:__anon58
CHNL_PING	inc/lorabase.h	/^enum { CHNL_PING         = 0 }; \/\/ used only for default init of state (follows beacon - rotating)$/;"	e	enum:__anon70
CHNL_PING	inc/lorabase.h	/^enum { CHNL_PING         = 5 };$/;"	e	enum:__anon55
CONFIG_INC	inc/config.h	2;"	d
CONST_TABLE	inc/oslmic.h	290;"	d
CONST_TABLE	inc/oslmic.h	301;"	d
CONST_TABLE	src/aes.c	/^static CONST_TABLE(u1_t, AES_S)[256] = {$/;"	p	file:
CONST_TABLE	src/aes.c	/^static CONST_TABLE(u4_t, AES_E1)[256] = {$/;"	p	file:
CONST_TABLE	src/aes.c	/^static CONST_TABLE(u4_t, AES_E2)[256] = {$/;"	p	file:
CONST_TABLE	src/aes.c	/^static CONST_TABLE(u4_t, AES_E3)[256] = {$/;"	p	file:
CONST_TABLE	src/aes.c	/^static CONST_TABLE(u4_t, AES_E4)[256] = {$/;"	p	file:
CONST_TABLE	src/aes.c	/^static CONST_TABLE(u4_t, AES_RCON)[10] = {$/;"	p	file:
CP	Makefile	/^CP = avr-objcopy$/;"	m
CRC8INIT	src/crc8.c	5;"	d	file:
CRC8POLY	src/crc8.c	6;"	d	file:
CRC8_H_	inc/crc8.h	2;"	d
CR_4_5	inc/lorabase.h	/^enum _cr_t { CR_4_5=0, CR_4_6, CR_4_7, CR_4_8 };$/;"	e	enum:_cr_t
CR_4_6	inc/lorabase.h	/^enum _cr_t { CR_4_5=0, CR_4_6, CR_4_7, CR_4_8 };$/;"	e	enum:_cr_t
CR_4_7	inc/lorabase.h	/^enum _cr_t { CR_4_5=0, CR_4_6, CR_4_7, CR_4_8 };$/;"	e	enum:_cr_t
CR_4_8	inc/lorabase.h	/^enum _cr_t { CR_4_5=0, CR_4_6, CR_4_7, CR_4_8 };$/;"	e	enum:_cr_t
C_INCLUDES	Makefile	/^C_INCLUDES = inc$/;"	m
DEBUG	Makefile	/^DEBUG = 1$/;"	m
DECLARE_LMIC	inc/oslmic.h	94;"	d
DECL_ON_LMIC_EVENT	inc/oslmic.h	82;"	d
DEFINE_LMIC	inc/oslmic.h	93;"	d
DELAY_DNW1	inc/lorabase.h	/^enum { DELAY_DNW1        =  1 }; \/\/ in secs down window #1$/;"	e	enum:__anon36
DELAY_DNW1_osticks	src/lmic.c	42;"	d	file:
DELAY_DNW2	inc/lorabase.h	/^enum { DELAY_DNW2        =  DELAY_DNW1 +(int)DELAY_EXTDNW2 }; \/\/ in secs down window #1$/;"	e	enum:__anon39
DELAY_DNW2_osticks	src/lmic.c	43;"	d	file:
DELAY_EXTDNW2	inc/lorabase.h	/^enum { DELAY_EXTDNW2     =  1 }; \/\/ in secs$/;"	e	enum:__anon37
DELAY_EXTDNW2_osticks	src/lmic.c	46;"	d	file:
DELAY_JACC1	inc/lorabase.h	/^enum { DELAY_JACC1       =  5 }; \/\/ in secs$/;"	e	enum:__anon35
DELAY_JACC1_osticks	src/lmic.c	44;"	d	file:
DELAY_JACC2	inc/lorabase.h	/^enum { DELAY_JACC2       =  DELAY_JACC1+(int)DELAY_EXTDNW2 }; \/\/ in secs$/;"	e	enum:__anon38
DELAY_JACC2_osticks	src/lmic.c	45;"	d	file:
DEVADDR	src/main.c	/^static  u4_t DEVADDR = 0x260111DF;$/;"	v	file:
DEVEUI	src/main.c	/^static  u1_t DEVEUI[8]  = { 0x24, 0x2C, 0x70, 0x25, 0xD7, 0x11, 0x09, 0x00 };\/\/ABP$/;"	v	file:
DEVEUI	src/main.c	/^static  u1_t DEVEUI[8]  = { 0x77, 0xEC, 0xAC, 0xD3, 0x00, 0xB5, 0xC5, 0x00};\/\/OTTA$/;"	v	file:
DEVKEY	src/main.c	/^static  u1_t DEVKEY[16] = { 0x17, 0xD1, 0x31, 0x96, 0xDF, 0x02, 0x9C, 0x15, 0x45, 0x0B, 0x5C, 0x50, 0xA0, 0xDD, 0xD9, 0x55 };$/;"	v	file:
DEVKEY	src/main.c	/^static  u1_t DEVKEY[16] = { 0x46, 0xDC, 0x9E, 0x10, 0x3C, 0x79, 0xA3, 0xB1, 0xC6, 0x92, 0x58, 0xD3, 0xCC, 0xE1, 0x3C, 0x98}; \/* OTTA *\/$/;"	v	file:
DNW2_SAFETY_ZONE	src/lmic.c	52;"	d	file:
DNW2_SAFETY_ZONE	src/lmic.c	55;"	d	file:
DO_DEVDB	inc/oslmic.h	56;"	d
DR2HSYM_osticks	src/lmic.c	/^static const ostime_t DR2HSYM_osticks[] = {$/;"	v	file:
DRADJUST	src/lmic.c	/^static const u1_t DRADJUST[2+TXCONF_ATTEMPTS] = {$/;"	v	file:
DRCHG_NOACK	inc/lmic.h	/^enum { DRCHG_SET, DRCHG_NOJACC, DRCHG_NOACK, DRCHG_NOADRACK, DRCHG_NWKCMD };$/;"	e	enum:__anon19
DRCHG_NOADRACK	inc/lmic.h	/^enum { DRCHG_SET, DRCHG_NOJACC, DRCHG_NOACK, DRCHG_NOADRACK, DRCHG_NWKCMD };$/;"	e	enum:__anon19
DRCHG_NOJACC	inc/lmic.h	/^enum { DRCHG_SET, DRCHG_NOJACC, DRCHG_NOACK, DRCHG_NOADRACK, DRCHG_NWKCMD };$/;"	e	enum:__anon19
DRCHG_NWKCMD	inc/lmic.h	/^enum { DRCHG_SET, DRCHG_NOJACC, DRCHG_NOACK, DRCHG_NOADRACK, DRCHG_NWKCMD };$/;"	e	enum:__anon19
DRCHG_SET	inc/lmic.h	/^enum { DRCHG_SET, DRCHG_NOJACC, DRCHG_NOACK, DRCHG_NOADRACK, DRCHG_NWKCMD };$/;"	e	enum:__anon19
DR_BCN	inc/lorabase.h	/^enum { DR_BCN            = DR_SF10CR };$/;"	e	enum:__anon77
DR_BCN	inc/lorabase.h	/^enum { DR_BCN            = DR_SF9 };$/;"	e	enum:__anon63
DR_DFLTMIN	inc/lorabase.h	/^enum { DR_DFLTMIN = DR_SF7 };$/;"	e	enum:__anon51
DR_DFLTMIN	inc/lorabase.h	/^enum { DR_DFLTMIN = DR_SF8C };$/;"	e	enum:__anon66
DR_DNW2	inc/lorabase.h	/^enum { DR_DNW2           = DR_SF12 };$/;"	e	enum:__anon60
DR_DNW2	inc/lorabase.h	/^enum { DR_DNW2           = DR_SF12CR };$/;"	e	enum:__anon75
DR_FSK	inc/lorabase.h	/^enum _dr_eu868_t { DR_SF12=0, DR_SF11, DR_SF10, DR_SF9, DR_SF8, DR_SF7, DR_SF7B, DR_FSK, DR_NONE };$/;"	e	enum:_dr_eu868_t
DR_NONE	inc/lorabase.h	/^enum _dr_eu868_t { DR_SF12=0, DR_SF11, DR_SF10, DR_SF9, DR_SF8, DR_SF7, DR_SF7B, DR_FSK, DR_NONE };$/;"	e	enum:_dr_eu868_t
DR_NONE	inc/lorabase.h	/^enum _dr_us915_t { DR_SF10=0, DR_SF9, DR_SF8, DR_SF7, DR_SF8C, DR_NONE,$/;"	e	enum:_dr_us915_t
DR_PAGE	inc/lorabase.h	/^enum { DR_PAGE = DR_PAGE_EU868 };$/;"	e	enum:__anon52
DR_PAGE	inc/lorabase.h	/^enum { DR_PAGE = DR_PAGE_US915 };$/;"	e	enum:__anon67
DR_PAGE_EU868	inc/lorabase.h	/^enum { DR_PAGE_EU868 = 0x00 };$/;"	e	enum:__anon28
DR_PAGE_US915	inc/lorabase.h	/^enum { DR_PAGE_US915 = 0x10 };$/;"	e	enum:__anon29
DR_PING	inc/lorabase.h	/^enum { DR_PING           = DR_SF10CR };       \/\/ default ping DR$/;"	e	enum:__anon72
DR_PING	inc/lorabase.h	/^enum { DR_PING           = DR_SF9 };    \/\/ default ping DR$/;"	e	enum:__anon57
DR_RANGE_MAP	inc/lmic.h	255;"	d
DR_SF10	inc/lorabase.h	/^enum _dr_eu868_t { DR_SF12=0, DR_SF11, DR_SF10, DR_SF9, DR_SF8, DR_SF7, DR_SF7B, DR_FSK, DR_NONE };$/;"	e	enum:_dr_eu868_t
DR_SF10	inc/lorabase.h	/^enum _dr_us915_t { DR_SF10=0, DR_SF9, DR_SF8, DR_SF7, DR_SF8C, DR_NONE,$/;"	e	enum:_dr_us915_t
DR_SF10CR	inc/lorabase.h	/^                   DR_SF12CR=8, DR_SF11CR, DR_SF10CR, DR_SF9CR, DR_SF8CR, DR_SF7CR };$/;"	e	enum:_dr_us915_t
DR_SF11	inc/lorabase.h	/^enum _dr_eu868_t { DR_SF12=0, DR_SF11, DR_SF10, DR_SF9, DR_SF8, DR_SF7, DR_SF7B, DR_FSK, DR_NONE };$/;"	e	enum:_dr_eu868_t
DR_SF11CR	inc/lorabase.h	/^                   DR_SF12CR=8, DR_SF11CR, DR_SF10CR, DR_SF9CR, DR_SF8CR, DR_SF7CR };$/;"	e	enum:_dr_us915_t
DR_SF12	inc/lorabase.h	/^enum _dr_eu868_t { DR_SF12=0, DR_SF11, DR_SF10, DR_SF9, DR_SF8, DR_SF7, DR_SF7B, DR_FSK, DR_NONE };$/;"	e	enum:_dr_eu868_t
DR_SF12CR	inc/lorabase.h	/^                   DR_SF12CR=8, DR_SF11CR, DR_SF10CR, DR_SF9CR, DR_SF8CR, DR_SF7CR };$/;"	e	enum:_dr_us915_t
DR_SF7	inc/lorabase.h	/^enum _dr_eu868_t { DR_SF12=0, DR_SF11, DR_SF10, DR_SF9, DR_SF8, DR_SF7, DR_SF7B, DR_FSK, DR_NONE };$/;"	e	enum:_dr_eu868_t
DR_SF7	inc/lorabase.h	/^enum _dr_us915_t { DR_SF10=0, DR_SF9, DR_SF8, DR_SF7, DR_SF8C, DR_NONE,$/;"	e	enum:_dr_us915_t
DR_SF7B	inc/lorabase.h	/^enum _dr_eu868_t { DR_SF12=0, DR_SF11, DR_SF10, DR_SF9, DR_SF8, DR_SF7, DR_SF7B, DR_FSK, DR_NONE };$/;"	e	enum:_dr_eu868_t
DR_SF7CR	inc/lorabase.h	/^                   DR_SF12CR=8, DR_SF11CR, DR_SF10CR, DR_SF9CR, DR_SF8CR, DR_SF7CR };$/;"	e	enum:_dr_us915_t
DR_SF8	inc/lorabase.h	/^enum _dr_eu868_t { DR_SF12=0, DR_SF11, DR_SF10, DR_SF9, DR_SF8, DR_SF7, DR_SF7B, DR_FSK, DR_NONE };$/;"	e	enum:_dr_eu868_t
DR_SF8	inc/lorabase.h	/^enum _dr_us915_t { DR_SF10=0, DR_SF9, DR_SF8, DR_SF7, DR_SF8C, DR_NONE,$/;"	e	enum:_dr_us915_t
DR_SF8C	inc/lorabase.h	/^enum _dr_us915_t { DR_SF10=0, DR_SF9, DR_SF8, DR_SF7, DR_SF8C, DR_NONE,$/;"	e	enum:_dr_us915_t
DR_SF8CR	inc/lorabase.h	/^                   DR_SF12CR=8, DR_SF11CR, DR_SF10CR, DR_SF9CR, DR_SF8CR, DR_SF7CR };$/;"	e	enum:_dr_us915_t
DR_SF9	inc/lorabase.h	/^enum _dr_eu868_t { DR_SF12=0, DR_SF11, DR_SF10, DR_SF9, DR_SF8, DR_SF7, DR_SF7B, DR_FSK, DR_NONE };$/;"	e	enum:_dr_eu868_t
DR_SF9	inc/lorabase.h	/^enum _dr_us915_t { DR_SF10=0, DR_SF9, DR_SF8, DR_SF7, DR_SF8C, DR_NONE,$/;"	e	enum:_dr_us915_t
DR_SF9CR	inc/lorabase.h	/^                   DR_SF12CR=8, DR_SF11CR, DR_SF10CR, DR_SF9CR, DR_SF8CR, DR_SF7CR };$/;"	e	enum:_dr_us915_t
DS18B20_10_BIT	inc/ds18x20.h	35;"	d
DS18B20_10_BIT_UNDF	inc/ds18x20.h	41;"	d
DS18B20_11_BIT	inc/ds18x20.h	36;"	d
DS18B20_11_BIT_UNDF	inc/ds18x20.h	42;"	d
DS18B20_12_BIT	inc/ds18x20.h	37;"	d
DS18B20_12_BIT_UNDF	inc/ds18x20.h	43;"	d
DS18B20_9_BIT	inc/ds18x20.h	34;"	d
DS18B20_9_BIT_UNDF	inc/ds18x20.h	40;"	d
DS18B20_CONF_REG	inc/ds18x20.h	33;"	d
DS18B20_ID	inc/ds18x20.h	24;"	d
DS18B20_MODE	inc/config.h	5;"	d
DS18B20_TCONV_10BIT	inc/ds18x20.h	48;"	d
DS18B20_TCONV_11BIT	inc/ds18x20.h	47;"	d
DS18B20_TCONV_12BIT	inc/ds18x20.h	46;"	d
DS18B20_TCONV_9BIT	inc/ds18x20.h	49;"	d
DS18S20_ID	inc/ds18x20.h	23;"	d
DS18S20_TCONV	inc/ds18x20.h	50;"	d
DS18X20_CONVERT_T	inc/ds18x20.h	26;"	d
DS18X20_COPYSP_DELAY	inc/ds18x20.h	61;"	d
DS18X20_COPY_SCRATCHPAD	inc/ds18x20.h	59;"	d
DS18X20_EE_RECALL	inc/ds18x20.h	30;"	d
DS18X20_EE_WRITE	inc/ds18x20.h	29;"	d
DS18X20_ERROR	inc/ds18x20.h	15;"	d
DS18X20_ERROR_CRC	inc/ds18x20.h	17;"	d
DS18X20_FRACCONV	inc/ds18x20.h	53;"	d
DS18X20_H_	inc/ds18x20.h	2;"	d
DS18X20_OK	inc/ds18x20.h	14;"	d
DS18X20_POWER_EXTERN	inc/ds18x20.h	20;"	d
DS18X20_POWER_PARASITE	inc/ds18x20.h	19;"	d
DS18X20_READ	inc/ds18x20.h	27;"	d
DS18X20_READ_POWER_SUPPLY	inc/ds18x20.h	31;"	d
DS18X20_RECALL_E2	inc/ds18x20.h	60;"	d
DS18X20_SP_SIZE	inc/ds18x20.h	55;"	d
DS18X20_START_FAIL	inc/ds18x20.h	16;"	d
DS18X20_TH_REG	inc/ds18x20.h	62;"	d
DS18X20_TL_REG	inc/ds18x20.h	63;"	d
DS18X20_VERBOSE	inc/ds18x20.h	11;"	d
DS18X20_WRITE	inc/ds18x20.h	28;"	d
DS18X20_WRITE_SCRATCHPAD	inc/ds18x20.h	58;"	d
DS18X20_copy_scratchpad	inc/ds18x20.h	/^uint8_t DS18X20_copy_scratchpad( uint8_t with_power_extern, uint8_t id[] );$/;"	p	signature:( uint8_t with_power_extern, uint8_t id[] )
DS18X20_copy_scratchpad	src/ds18x20.c	/^uint8_t DS18X20_copy_scratchpad( uint8_t with_power_extern,$/;"	f	signature:( uint8_t with_power_extern, uint8_t id[] )
DS18X20_find_sensor	inc/ds18x20.h	/^void DS18X20_find_sensor(uint8_t *diff, uint8_t id[]);$/;"	p	signature:(uint8_t *diff, uint8_t id[])
DS18X20_find_sensor	src/ds18x20.c	/^void DS18X20_find_sensor(uint8_t *diff, uint8_t id[]) {$/;"	f	signature:(uint8_t *diff, uint8_t id[])
DS18X20_get_power_status	inc/ds18x20.h	/^uint8_t	DS18X20_get_power_status(uint8_t id[]);$/;"	p	signature:(uint8_t id[])
DS18X20_meas_to_cel	inc/ds18x20.h	/^uint8_t DS18X20_meas_to_cel( uint8_t fc, uint8_t *sp, uint8_t* subzero, uint8_t* cel, uint8_t* cel_frac_bits);$/;"	p	signature:( uint8_t fc, uint8_t *sp, uint8_t* subzero, uint8_t* cel, uint8_t* cel_frac_bits)
DS18X20_meas_to_cel	src/ds18x20.c	/^uint8_t DS18X20_meas_to_cel(uint8_t fc, uint8_t *sp, uint8_t* subzero,$/;"	f	signature:(uint8_t fc, uint8_t *sp, uint8_t* subzero, uint8_t* cel, uint8_t* cel_frac_bits)
DS18X20_read_meas	inc/ds18x20.h	/^uint8_t DS18X20_read_meas(uint8_t id[],uint8_t res_meas[] );$/;"	p	signature:(uint8_t id[],uint8_t res_meas[] )
DS18X20_read_meas	src/ds18x20.c	/^uint8_t DS18X20_read_meas(uint8_t id[], uint8_t res_meas[])$/;"	f	signature:(uint8_t id[], uint8_t res_meas[])
DS18X20_read_meas_single	inc/ds18x20.h	/^uint8_t DS18X20_read_meas_single(uint8_t familycode, uint8_t *subzero, uint8_t *cel, uint8_t *cel_frac_bits);$/;"	p	signature:(uint8_t familycode, uint8_t *subzero, uint8_t *cel, uint8_t *cel_frac_bits)
DS18X20_read_meas_single	src/ds18x20.c	/^uint8_t DS18X20_read_meas_single(uint8_t familycode, uint8_t *subzero,$/;"	f	signature:(uint8_t familycode, uint8_t *subzero, uint8_t *cel, uint8_t *cel_frac_bits)
DS18X20_read_scratchpad	inc/ds18x20.h	/^uint8_t DS18X20_read_scratchpad( uint8_t id[], uint8_t sp[]);$/;"	p	signature:( uint8_t id[], uint8_t sp[])
DS18X20_read_scratchpad	src/ds18x20.c	/^uint8_t DS18X20_read_scratchpad( uint8_t id[], uint8_t sp[] )$/;"	f	signature:( uint8_t id[], uint8_t sp[] )
DS18X20_recall_E2	inc/ds18x20.h	/^uint8_t DS18X20_recall_E2( uint8_t id[] );$/;"	p	signature:( uint8_t id[] )
DS18X20_recall_E2	src/ds18x20.c	/^uint8_t DS18X20_recall_E2( uint8_t id[] )$/;"	f	signature:( uint8_t id[] )
DS18X20_start_meas	inc/ds18x20.h	/^uint8_t DS18X20_start_meas( uint8_t with_external, uint8_t id[]);$/;"	p	signature:( uint8_t with_external, uint8_t id[])
DS18X20_start_meas	src/ds18x20.c	/^uint8_t DS18X20_start_meas(uint8_t with_power_extern, uint8_t id[]) {$/;"	f	signature:(uint8_t with_power_extern, uint8_t id[])
DS18X20_temp_cmp	inc/ds18x20.h	/^int8_t DS18X20_temp_cmp(uint8_t subzero1, uint16_t cel1, uint8_t subzero2, uint16_t cel2);$/;"	p	signature:(uint8_t subzero1, uint16_t cel1, uint8_t subzero2, uint16_t cel2)
DS18X20_temp_to_decicel	inc/ds18x20.h	/^uint16_t DS18X20_temp_to_decicel(uint8_t res_meas[]);$/;"	p	signature:(uint8_t res_meas[])
DS18X20_temp_to_decicel	src/ds18x20.c	/^uint16_t DS18X20_temp_to_decicel(uint8_t res_meas[])$/;"	f	signature:(uint8_t res_meas[])
DS18X20_write_scratchpad	inc/ds18x20.h	/^uint8_t DS18X20_write_scratchpad( uint8_t id[], uint8_t th, uint8_t tl, uint8_t conf);$/;"	p	signature:( uint8_t id[], uint8_t th, uint8_t tl, uint8_t conf)
DS18X20_write_scratchpad	src/ds18x20.c	/^uint8_t DS18X20_write_scratchpad( uint8_t id[],$/;"	f	signature:( uint8_t id[], uint8_t th, uint8_t tl, uint8_t conf)
DataIdx	src/printf-stdarg.c	/^	int DataIdx;$/;"	l
EU868_F1	inc/lorabase.h	/^enum { EU868_F1 = 868100000,      \/\/ g1   SF7-12 $/;"	e	enum:__anon53
EU868_F2	inc/lorabase.h	/^       EU868_F2 = 868300000,      \/\/ g1   SF7-12 FSK SF7\/250         $/;"	e	enum:__anon53
EU868_F3	inc/lorabase.h	/^       EU868_F3 = 868500000,      \/\/ g1   SF7-12         $/;"	e	enum:__anon53
EU868_F4	inc/lorabase.h	/^       EU868_F4 = 868850000,      \/\/ g2   SF7-12         $/;"	e	enum:__anon53
EU868_F5	inc/lorabase.h	/^       EU868_F5 = 869050000,      \/\/ g2   SF7-12         $/;"	e	enum:__anon53
EU868_F6	inc/lorabase.h	/^       EU868_F6 = 869525000,      \/\/ g3   SF7-12         $/;"	e	enum:__anon53
EU868_FREQ_MAX	inc/lorabase.h	/^       EU868_FREQ_MAX = 870000000 };$/;"	e	enum:__anon54
EU868_FREQ_MIN	inc/lorabase.h	/^enum { EU868_FREQ_MIN = 863000000,$/;"	e	enum:__anon54
EU868_J4	inc/lorabase.h	/^       EU868_J4 = 864100000,      \/\/ g2   SF7-12  used during join$/;"	e	enum:__anon53
EU868_J5	inc/lorabase.h	/^       EU868_J5 = 864300000,      \/\/ g2   SF7-12   ditto$/;"	e	enum:__anon53
EU868_J6	inc/lorabase.h	/^       EU868_J6 = 864500000,      \/\/ g2   SF7-12   ditto$/;"	e	enum:__anon53
EV	inc/oslmic.h	55;"	d
EV_BEACON_FOUND	inc/lmic.h	/^enum _ev_t { EV_SCAN_TIMEOUT=1, EV_BEACON_FOUND,$/;"	e	enum:_ev_t
EV_BEACON_MISSED	inc/lmic.h	/^             EV_BEACON_MISSED, EV_BEACON_TRACKED, EV_JOINING,$/;"	e	enum:_ev_t
EV_BEACON_TRACKED	inc/lmic.h	/^             EV_BEACON_MISSED, EV_BEACON_TRACKED, EV_JOINING,$/;"	e	enum:_ev_t
EV_JOINED	inc/lmic.h	/^             EV_JOINED, EV_RFU1, EV_JOIN_FAILED, EV_REJOIN_FAILED,$/;"	e	enum:_ev_t
EV_JOINING	inc/lmic.h	/^             EV_BEACON_MISSED, EV_BEACON_TRACKED, EV_JOINING,$/;"	e	enum:_ev_t
EV_JOIN_FAILED	inc/lmic.h	/^             EV_JOINED, EV_RFU1, EV_JOIN_FAILED, EV_REJOIN_FAILED,$/;"	e	enum:_ev_t
EV_LINK_ALIVE	inc/lmic.h	/^             EV_RXCOMPLETE, EV_LINK_DEAD, EV_LINK_ALIVE, EV_SCAN_FOUND,$/;"	e	enum:_ev_t
EV_LINK_DEAD	inc/lmic.h	/^             EV_RXCOMPLETE, EV_LINK_DEAD, EV_LINK_ALIVE, EV_SCAN_FOUND,$/;"	e	enum:_ev_t
EV_LOST_TSYNC	inc/lmic.h	/^             EV_TXCOMPLETE, EV_LOST_TSYNC, EV_RESET,$/;"	e	enum:_ev_t
EV_REJOIN_FAILED	inc/lmic.h	/^             EV_JOINED, EV_RFU1, EV_JOIN_FAILED, EV_REJOIN_FAILED,$/;"	e	enum:_ev_t
EV_RESET	inc/lmic.h	/^             EV_TXCOMPLETE, EV_LOST_TSYNC, EV_RESET,$/;"	e	enum:_ev_t
EV_RFU1	inc/lmic.h	/^             EV_JOINED, EV_RFU1, EV_JOIN_FAILED, EV_REJOIN_FAILED,$/;"	e	enum:_ev_t
EV_RXCOMPLETE	inc/lmic.h	/^             EV_RXCOMPLETE, EV_LINK_DEAD, EV_LINK_ALIVE, EV_SCAN_FOUND,$/;"	e	enum:_ev_t
EV_SCAN_FOUND	inc/lmic.h	/^             EV_RXCOMPLETE, EV_LINK_DEAD, EV_LINK_ALIVE, EV_SCAN_FOUND,$/;"	e	enum:_ev_t
EV_SCAN_TIMEOUT	inc/lmic.h	/^enum _ev_t { EV_SCAN_TIMEOUT=1, EV_BEACON_FOUND,$/;"	e	enum:_ev_t
EV_TXCOMPLETE	inc/lmic.h	/^             EV_TXCOMPLETE, EV_LOST_TSYNC, EV_RESET,$/;"	e	enum:_ev_t
EV_TXSTART	inc/lmic.h	/^             EV_TXSTART };$/;"	e	enum:_ev_t
FALSE	inc/gps.h	20;"	d
FCT_ACK	inc/lorabase.h	/^    FCT_ACK    = 0x20,$/;"	e	enum:__anon88
FCT_ADRARQ	inc/lorabase.h	/^    FCT_ADRARQ = 0x40,$/;"	e	enum:__anon88
FCT_ADREN	inc/lorabase.h	/^    FCT_ADREN  = 0x80,$/;"	e	enum:__anon88
FCT_CLASSB	inc/lorabase.h	/^    FCT_CLASSB = FCT_MORE$/;"	e	enum:__anon89
FCT_MORE	inc/lorabase.h	/^    FCT_MORE   = 0x10,   \/\/ also in DN direction: Class B indicator$/;"	e	enum:__anon88
FCT_OPTLEN	inc/lorabase.h	/^    FCT_OPTLEN = 0x0F,$/;"	e	enum:__anon88
FREQ_BCN	inc/lorabase.h	/^enum { FREQ_BCN          = EU868_F6 };$/;"	e	enum:__anon62
FREQ_DNW2	inc/lorabase.h	/^enum { FREQ_DNW2         = EU868_F6 };$/;"	e	enum:__anon59
FREQ_DNW2	inc/lorabase.h	/^enum { FREQ_DNW2         = US915_500kHz_DNFBASE + CHNL_DNW2*US915_500kHz_DNFSTEP };$/;"	e	enum:__anon74
FREQ_PING	inc/lorabase.h	/^enum { FREQ_PING         = EU868_F6 };  \/\/ default ping freq$/;"	e	enum:__anon56
FREQ_PING	inc/lorabase.h	/^enum { FREQ_PING         = US915_500kHz_DNFBASE + CHNL_PING*US915_500kHz_DNFSTEP };  \/\/ default ping freq$/;"	e	enum:__anon71
FSK	inc/lorabase.h	/^enum _sf_t { FSK=0, SF7, SF8, SF9, SF10, SF11, SF12, SFrfu };$/;"	e	enum:_sf_t
FSKRegAfcBw	src/radio.c	57;"	d	file:
FSKRegAfcFei	src/radio.c	68;"	d	file:
FSKRegAfcLsb	src/radio.c	72;"	d	file:
FSKRegAfcMsb	src/radio.c	70;"	d	file:
FSKRegBitrateLsb	src/radio.c	35;"	d	file:
FSKRegBitrateMsb	src/radio.c	34;"	d	file:
FSKRegBroadcastAdrs	src/radio.c	113;"	d	file:
FSKRegFdevLsb	src/radio.c	37;"	d	file:
FSKRegFdevMsb	src/radio.c	36;"	d	file:
FSKRegFeiLsb	src/radio.c	76;"	d	file:
FSKRegFeiMsb	src/radio.c	74;"	d	file:
FSKRegFifoThresh	src/radio.c	114;"	d	file:
FSKRegImageCal	src/radio.c	122;"	d	file:
FSKRegIrqFlags1	src/radio.c	125;"	d	file:
FSKRegIrqFlags2	src/radio.c	126;"	d	file:
FSKRegLowBat	src/radio.c	124;"	d	file:
FSKRegNodeAdrs	src/radio.c	111;"	d	file:
FSKRegOokAvg	src/radio.c	63;"	d	file:
FSKRegOokFix	src/radio.c	61;"	d	file:
FSKRegOokPeak	src/radio.c	59;"	d	file:
FSKRegOsc	src/radio.c	88;"	d	file:
FSKRegPacketConfig1	src/radio.c	107;"	d	file:
FSKRegPacketConfig2	src/radio.c	108;"	d	file:
FSKRegPayloadLength	src/radio.c	110;"	d	file:
FSKRegPreambleDetect	src/radio.c	78;"	d	file:
FSKRegPreambleLsb	src/radio.c	93;"	d	file:
FSKRegPreambleMsb	src/radio.c	90;"	d	file:
FSKRegRssiCollision	src/radio.c	49;"	d	file:
FSKRegRssiConfig	src/radio.c	47;"	d	file:
FSKRegRssiThresh	src/radio.c	51;"	d	file:
FSKRegRssiValue	src/radio.c	53;"	d	file:
FSKRegRxBw	src/radio.c	55;"	d	file:
FSKRegRxConfig	src/radio.c	45;"	d	file:
FSKRegRxDelay	src/radio.c	86;"	d	file:
FSKRegRxTimeout1	src/radio.c	80;"	d	file:
FSKRegRxTimeout2	src/radio.c	82;"	d	file:
FSKRegRxTimeout3	src/radio.c	84;"	d	file:
FSKRegSeqConfig1	src/radio.c	115;"	d	file:
FSKRegSeqConfig2	src/radio.c	116;"	d	file:
FSKRegSyncConfig	src/radio.c	94;"	d	file:
FSKRegSyncValue1	src/radio.c	96;"	d	file:
FSKRegSyncValue2	src/radio.c	98;"	d	file:
FSKRegSyncValue3	src/radio.c	100;"	d	file:
FSKRegSyncValue4	src/radio.c	101;"	d	file:
FSKRegSyncValue5	src/radio.c	103;"	d	file:
FSKRegSyncValue6	src/radio.c	104;"	d	file:
FSKRegSyncValue7	src/radio.c	105;"	d	file:
FSKRegSyncValue8	src/radio.c	106;"	d	file:
FSKRegTemp	src/radio.c	123;"	d	file:
FSKRegTimer1Coef	src/radio.c	119;"	d	file:
FSKRegTimer2Coef	src/radio.c	121;"	d	file:
FSKRegTimerResol	src/radio.c	118;"	d	file:
FUNC_ADDR	inc/oslmic.h	88;"	d
FUNC_ADDR	src/lmic.c	/^        schedRx2(sec2osticks(LMIC.rxDelay + (int)DELAY_EXTDNW2), FUNC_ADDR(setupRx2DnData));$/;"	p	file:
FUNC_ADDR	src/lmic.c	/^    setupRx1(FUNC_ADDR(processRx1DnData));$/;"	p	file:
FUNC_ADDR	src/lmic.c	/^    setupRx1(FUNC_ADDR(processRx1Jacc));$/;"	p	file:
FUNC_ADDR	src/lmic.c	/^    txDone(sec2osticks(LMIC.rxDelay), FUNC_ADDR(setupRx1DnData));$/;"	p	file:
F_CPU	inc/hal.h	45;"	d
GPS_TRECKER_MODE	inc/config.h	6;"	d
GPS_t	inc/gps.h	/^}GPS_t;$/;"	t	typeref:struct:__anon102
HDR_FTYPE	inc/lorabase.h	/^    HDR_FTYPE   = 0xE0,$/;"	e	enum:__anon84
HDR_FTYPE_DADN	inc/lorabase.h	/^    HDR_FTYPE_DADN   = 0x60,  \/\/ data (unconfirmed) dn$/;"	e	enum:__anon86
HDR_FTYPE_DAUP	inc/lorabase.h	/^    HDR_FTYPE_DAUP   = 0x40,  \/\/ data (unconfirmed) up$/;"	e	enum:__anon86
HDR_FTYPE_DCDN	inc/lorabase.h	/^    HDR_FTYPE_DCDN   = 0xA0,  \/\/ data confirmed dn$/;"	e	enum:__anon86
HDR_FTYPE_DCUP	inc/lorabase.h	/^    HDR_FTYPE_DCUP   = 0x80,  \/\/ data confirmed up$/;"	e	enum:__anon86
HDR_FTYPE_DNFLAG	inc/lorabase.h	/^enum { HDR_FTYPE_DNFLAG = 0x20 };  \/\/ flags DN frame except for HDR_FTYPE_PROP$/;"	e	enum:__anon85
HDR_FTYPE_JACC	inc/lorabase.h	/^    HDR_FTYPE_JACC   = 0x20,$/;"	e	enum:__anon86
HDR_FTYPE_JREQ	inc/lorabase.h	/^    HDR_FTYPE_JREQ   = 0x00,$/;"	e	enum:__anon86
HDR_FTYPE_PROP	inc/lorabase.h	/^    HDR_FTYPE_PROP   = 0xE0$/;"	e	enum:__anon86
HDR_FTYPE_REJOIN	inc/lorabase.h	/^    HDR_FTYPE_REJOIN = 0xC0,  \/\/ rejoin for roaming$/;"	e	enum:__anon86
HDR_MAJOR	inc/lorabase.h	/^    HDR_MAJOR   = 0x03$/;"	e	enum:__anon84
HDR_MAJOR_V1	inc/lorabase.h	/^    HDR_MAJOR_V1 = 0x00,$/;"	e	enum:__anon87
HDR_RFU	inc/lorabase.h	/^    HDR_RFU     = 0x1C,$/;"	e	enum:__anon84
HEIGHT_BUF	inc/gps.h	17;"	d
ILLEGAL_RPS	inc/lorabase.h	/^enum { ILLEGAL_RPS = 0xFF };$/;"	e	enum:__anon27
IRQ_FSK1_MODEREADY_MASK	src/radio.c	222;"	d	file:
IRQ_FSK1_PLLLOCK_MASK	src/radio.c	225;"	d	file:
IRQ_FSK1_PREAMBLEDETECT_MASK	src/radio.c	228;"	d	file:
IRQ_FSK1_RSSI_MASK	src/radio.c	226;"	d	file:
IRQ_FSK1_RXREADY_MASK	src/radio.c	223;"	d	file:
IRQ_FSK1_SYNCADDRESSMATCH_MASK	src/radio.c	229;"	d	file:
IRQ_FSK1_TIMEOUT_MASK	src/radio.c	227;"	d	file:
IRQ_FSK1_TXREADY_MASK	src/radio.c	224;"	d	file:
IRQ_FSK2_CRCOK_MASK	src/radio.c	236;"	d	file:
IRQ_FSK2_FIFOEMPTY_MASK	src/radio.c	231;"	d	file:
IRQ_FSK2_FIFOFULL_MASK	src/radio.c	230;"	d	file:
IRQ_FSK2_FIFOLEVEL_MASK	src/radio.c	232;"	d	file:
IRQ_FSK2_FIFOOVERRUN_MASK	src/radio.c	233;"	d	file:
IRQ_FSK2_LOWBAT_MASK	src/radio.c	237;"	d	file:
IRQ_FSK2_PACKETSENT_MASK	src/radio.c	234;"	d	file:
IRQ_FSK2_PAYLOADREADY_MASK	src/radio.c	235;"	d	file:
IRQ_LORA_CDDETD_MASK	src/radio.c	220;"	d	file:
IRQ_LORA_CDDONE_MASK	src/radio.c	218;"	d	file:
IRQ_LORA_CRCERR_MASK	src/radio.c	215;"	d	file:
IRQ_LORA_FHSSCH_MASK	src/radio.c	219;"	d	file:
IRQ_LORA_HEADER_MASK	src/radio.c	216;"	d	file:
IRQ_LORA_RXDONE_MASK	src/radio.c	214;"	d	file:
IRQ_LORA_RXTOUT_MASK	src/radio.c	213;"	d	file:
IRQ_LORA_TXDONE_MASK	src/radio.c	217;"	d	file:
ISR	src/gps.c	/^ISR(USART_RX_vect)$/;"	f
ISR	src/hal.c	/^ISR(INT0_vect)$/;"	f
ISR	src/hal.c	/^ISR(PCINT2_vect)$/;"	f
ISR	src/hal.c	/^ISR(TIMER0_OVF_vect)$/;"	f
ISR	src/hal.c	/^ISR(USART_TX_vect)$/;"	f
JOIN_GUARD_ms	inc/lmic.h	/^enum { JOIN_GUARD_ms      =  9000 };  \/\/ msecs - don't start Join Req\/Acc transaction before beacon$/;"	e	enum:__anon11
JOIN_GUARD_osticks	src/lmic.c	41;"	d	file:
KEEP_TXPOW	inc/lmic.h	/^enum { KEEP_TXPOW = -128 };$/;"	e	enum:__anon20
LATITUDE_BUF	inc/gps.h	14;"	d
LD	Makefile	/^LD = avr-gcc$/;"	m
LED_DDR	inc/hal.h	41;"	d
LED_PIN	inc/hal.h	42;"	d
LED_PORT	inc/hal.h	40;"	d
LENOF_TABLE	inc/oslmic.h	254;"	d
LEN_ARTNONCE	inc/lorabase.h	/^enum { LEN_ARTNONCE      =  3 };$/;"	e	enum:__anon33
LEN_BCN	inc/lorabase.h	/^    LEN_BCN          = 17$/;"	e	enum:__anon65
LEN_BCN	inc/lorabase.h	/^    LEN_BCN          = 19$/;"	e	enum:__anon79
LEN_DEVNONCE	inc/lorabase.h	/^enum { LEN_DEVNONCE      =  2 };$/;"	e	enum:__anon32
LEN_JA	inc/lorabase.h	/^    LEN_JA          = 17,$/;"	e	enum:__anon81
LEN_JAEXT	inc/lorabase.h	/^    LEN_JAEXT       = 17+16$/;"	e	enum:__anon81
LEN_JR	inc/lorabase.h	/^    LEN_JR          = 23$/;"	e	enum:__anon80
LEN_NETID	inc/lorabase.h	/^enum { LEN_NETID         =  3 };$/;"	e	enum:__anon34
LIBDIR	Makefile	/^LIBDIR = $/;"	m
LIBS	Makefile	/^LIBS = $/;"	m
LIMIT_CHANNELS	inc/lmic.h	/^enum { LIMIT_CHANNELS = (1<<4) };   \/\/ EU868 will never have more channels$/;"	e	enum:__anon16
LINK_CHECK_CONT	inc/lmic.h	/^enum { LINK_CHECK_CONT    =  12 ,    \/\/ continue with this after reported dead link$/;"	e	enum:__anon8
LINK_CHECK_DEAD	inc/lmic.h	/^       LINK_CHECK_DEAD    =  24 ,    \/\/ after this UP frames and no response from NWK assume link is dead$/;"	e	enum:__anon8
LINK_CHECK_INIT	inc/lmic.h	/^       LINK_CHECK_INIT    = -12 ,    \/\/ UP frame count until we inc datarate$/;"	e	enum:__anon8
LINK_CHECK_OFF	inc/lmic.h	/^       LINK_CHECK_OFF     =-128 };   \/\/ link check disabled$/;"	e	enum:__anon8
LMICHAL_radio_tx_power_policy_20dBm	inc/hal.h	/^	LMICHAL_radio_tx_power_policy_20dBm	= 2,$/;"	e	enum:__anon103
LMICHAL_radio_tx_power_policy_paboost	inc/hal.h	/^	LMICHAL_radio_tx_power_policy_paboost	= 1,$/;"	e	enum:__anon103
LMICHAL_radio_tx_power_policy_rfo	inc/hal.h	/^	LMICHAL_radio_tx_power_policy_rfo	= 0,$/;"	e	enum:__anon103
LMIC_VERSION_BUILD	inc/lmic.h	40;"	d
LMIC_VERSION_MAJOR	inc/lmic.h	38;"	d
LMIC_VERSION_MINOR	inc/lmic.h	39;"	d
LMIC_clrTxData	inc/lmic.h	/^void  LMIC_clrTxData    (void);$/;"	p	signature:(void)
LMIC_clrTxData	src/lmic.c	/^void LMIC_clrTxData (void) {$/;"	f	signature:(void)
LMIC_disableChannel	inc/lmic.h	/^void  LMIC_disableChannel (u1_t channel);$/;"	p	signature:(u1_t channel)
LMIC_disableChannel	src/lmic.c	/^void LMIC_disableChannel (u1_t channel) {$/;"	f	signature:(u1_t channel)
LMIC_disableTracking	inc/lmic.h	/^void  LMIC_disableTracking (void);$/;"	p	signature:(void)
LMIC_disableTracking	src/lmic.c	/^void LMIC_disableTracking (void) {$/;"	f	signature:(void)
LMIC_enableTracking	inc/lmic.h	/^bit_t LMIC_enableTracking  (u1_t tryBcnInfo);$/;"	p	signature:(u1_t tryBcnInfo)
LMIC_enableTracking	src/lmic.c	/^bit_t LMIC_enableTracking (u1_t tryBcnInfo) {$/;"	f	signature:(u1_t tryBcnInfo)
LMIC_init	inc/lmic.h	/^void  LMIC_init         (void);$/;"	p	signature:(void)
LMIC_init	src/lmic.c	/^void LMIC_init (void) {$/;"	f	signature:(void)
LMIC_reset	inc/lmic.h	/^void  LMIC_reset        (void);$/;"	p	signature:(void)
LMIC_reset	src/lmic.c	/^void LMIC_reset (void) {$/;"	f	signature:(void)
LMIC_sendAlive	inc/lmic.h	/^void  LMIC_sendAlive    (void);$/;"	p	signature:(void)
LMIC_sendAlive	src/lmic.c	/^void LMIC_sendAlive (void) {$/;"	f	signature:(void)
LMIC_setAdrMode	inc/lmic.h	/^void  LMIC_setAdrMode   (bit_t enabled);        \/\/ set ADR mode (if mobile turn off)$/;"	p	signature:(bit_t enabled)
LMIC_setAdrMode	src/lmic.c	/^void LMIC_setAdrMode (bit_t enabled) {$/;"	f	signature:(bit_t enabled)
LMIC_setDrTxpow	inc/lmic.h	/^void  LMIC_setDrTxpow   (dr_t dr, s1_t txpow);  \/\/ set default\/start DR\/txpow$/;"	p	signature:(dr_t dr, s1_t txpow)
LMIC_setDrTxpow	src/lmic.c	/^void LMIC_setDrTxpow (dr_t dr, s1_t txpow) {$/;"	f	signature:(dr_t dr, s1_t txpow)
LMIC_setLinkCheckMode	inc/lmic.h	/^void LMIC_setLinkCheckMode (bit_t enabled);$/;"	p	signature:(bit_t enabled)
LMIC_setLinkCheckMode	src/lmic.c	/^void LMIC_setLinkCheckMode (bit_t enabled) {$/;"	f	signature:(bit_t enabled)
LMIC_setPingable	inc/lmic.h	/^void  LMIC_setPingable   (u1_t intvExp);$/;"	p	signature:(u1_t intvExp)
LMIC_setPingable	src/lmic.c	/^void LMIC_setPingable (u1_t intvExp) {$/;"	f	signature:(u1_t intvExp)
LMIC_setSession	inc/lmic.h	/^void LMIC_setSession (u4_t netid, devaddr_t devaddr, xref2u1_t nwkKey, xref2u1_t artKey);$/;"	p	signature:(u4_t netid, devaddr_t devaddr, xref2u1_t nwkKey, xref2u1_t artKey)
LMIC_setSession	src/lmic.c	/^void LMIC_setSession (u4_t netid, devaddr_t devaddr, xref2u1_t nwkKey, xref2u1_t artKey) {$/;"	f	signature:(u4_t netid, devaddr_t devaddr, xref2u1_t nwkKey, xref2u1_t artKey)
LMIC_setTxData	inc/lmic.h	/^void  LMIC_setTxData    (void);$/;"	p	signature:(void)
LMIC_setTxData	src/lmic.c	/^void LMIC_setTxData (void) {$/;"	f	signature:(void)
LMIC_setTxData2	inc/lmic.h	/^int   LMIC_setTxData2   (u1_t port, xref2u1_t data, u1_t dlen, u1_t confirmed);$/;"	p	signature:(u1_t port, xref2u1_t data, u1_t dlen, u1_t confirmed)
LMIC_setTxData2	src/lmic.c	/^int LMIC_setTxData2 (u1_t port, xref2u1_t data, u1_t dlen, u1_t confirmed) {$/;"	f	signature:(u1_t port, xref2u1_t data, u1_t dlen, u1_t confirmed)
LMIC_setupBand	inc/lmic.h	/^bit_t LMIC_setupBand (u1_t bandidx, s1_t txpow, u2_t txcap);$/;"	p	signature:(u1_t bandidx, s1_t txpow, u2_t txcap)
LMIC_setupBand	src/lmic.c	/^bit_t LMIC_setupBand (u1_t bandidx, s1_t txpow, u2_t txcap) {$/;"	f	signature:(u1_t bandidx, s1_t txpow, u2_t txcap)
LMIC_setupChannel	inc/lmic.h	/^bit_t LMIC_setupChannel (u1_t channel, u4_t freq, u2_t drmap, s1_t band);$/;"	p	signature:(u1_t channel, u4_t freq, u2_t drmap, s1_t band)
LMIC_setupChannel	src/lmic.c	/^bit_t LMIC_setupChannel (u1_t chidx, u4_t freq, u2_t drmap, s1_t band) {$/;"	f	signature:(u1_t chidx, u4_t freq, u2_t drmap, s1_t band)
LMIC_shutdown	inc/lmic.h	/^void  LMIC_shutdown     (void);$/;"	p	signature:(void)
LMIC_shutdown	src/lmic.c	/^void LMIC_shutdown (void) {$/;"	f	signature:(void)
LMIC_startJoining	inc/lmic.h	/^bit_t LMIC_startJoining (void);$/;"	p	signature:(void)
LMIC_startJoining	src/lmic.c	/^bit_t LMIC_startJoining (void) {$/;"	f	signature:(void)
LMIC_stopPingable	inc/lmic.h	/^void  LMIC_stopPingable  (void);$/;"	p	signature:(void)
LMIC_stopPingable	src/lmic.c	/^void LMIC_stopPingable (void) {$/;"	f	signature:(void)
LMIC_tryRejoin	inc/lmic.h	/^void  LMIC_tryRejoin     (void);$/;"	p	signature:(void)
LMIC_tryRejoin	src/lmic.c	/^void LMIC_tryRejoin (void) {$/;"	f	signature:(void)
LNA_RX_GAIN	src/radio.c	271;"	d	file:
LNA_RX_GAIN	src/radio.c	273;"	d	file:
LONGITUDE_BUF	inc/gps.h	15;"	d
LORAFeiMib	src/radio.c	97;"	d	file:
LORARegDetectOptimize	src/radio.c	109;"	d	file:
LORARegDetectionThreshold	src/radio.c	117;"	d	file:
LORARegFeiLsb	src/radio.c	99;"	d	file:
LORARegFeiMsb	src/radio.c	95;"	d	file:
LORARegFifoAddrPtr	src/radio.c	46;"	d	file:
LORARegFifoRxBaseAddr	src/radio.c	50;"	d	file:
LORARegFifoRxByteAddr	src/radio.c	91;"	d	file:
LORARegFifoRxCurrentAddr	src/radio.c	52;"	d	file:
LORARegFifoTxBaseAddr	src/radio.c	48;"	d	file:
LORARegHopChannel	src/radio.c	73;"	d	file:
LORARegHopPeriod	src/radio.c	89;"	d	file:
LORARegInvertIQ	src/radio.c	112;"	d	file:
LORARegIrqFlags	src/radio.c	56;"	d	file:
LORARegIrqFlagsMask	src/radio.c	54;"	d	file:
LORARegModemConfig1	src/radio.c	75;"	d	file:
LORARegModemConfig2	src/radio.c	77;"	d	file:
LORARegModemConfig3	src/radio.c	92;"	d	file:
LORARegModemStat	src/radio.c	66;"	d	file:
LORARegPayloadLength	src/radio.c	85;"	d	file:
LORARegPayloadMaxLength	src/radio.c	87;"	d	file:
LORARegPktRssiValue	src/radio.c	69;"	d	file:
LORARegPktSnrValue	src/radio.c	67;"	d	file:
LORARegPreambleLsb	src/radio.c	83;"	d	file:
LORARegPreambleMsb	src/radio.c	81;"	d	file:
LORARegRssiValue	src/radio.c	71;"	d	file:
LORARegRssiWideband	src/radio.c	102;"	d	file:
LORARegRxHeaderCntValueLsb	src/radio.c	62;"	d	file:
LORARegRxHeaderCntValueMsb	src/radio.c	60;"	d	file:
LORARegRxNbBytes	src/radio.c	58;"	d	file:
LORARegRxPacketCntValueMsb	src/radio.c	64;"	d	file:
LORARegRxpacketCntValueLsb	src/radio.c	65;"	d	file:
LORARegSymbTimeoutLsb	src/radio.c	79;"	d	file:
LORARegSyncWord	src/radio.c	120;"	d	file:
LORA_MAC_PREAMBLE	src/radio.c	187;"	d	file:
LORA_RXDONE_FIXUP	src/radio.c	/^static const u2_t LORA_RXDONE_FIXUP[] = {$/;"	v	file:
MAIN_INC	inc/main.h	2;"	d
MAKERPS	inc/lorabase.h	372;"	d
MAP_DIO0_FSK_READY	src/radio.c	247;"	d	file:
MAP_DIO0_LORA_RXDONE	src/radio.c	241;"	d	file:
MAP_DIO0_LORA_TXDONE	src/radio.c	242;"	d	file:
MAP_DIO1_FSK_NOP	src/radio.c	248;"	d	file:
MAP_DIO1_LORA_NOP	src/radio.c	244;"	d	file:
MAP_DIO1_LORA_RXTOUT	src/radio.c	243;"	d	file:
MAP_DIO2_FSK_TIMEOUT	src/radio.c	250;"	d	file:
MAP_DIO2_FSK_TXNOP	src/radio.c	249;"	d	file:
MAP_DIO2_LORA_NOP	src/radio.c	245;"	d	file:
MAXSENSORS	inc/ds18x20.h	6;"	d
MAX_BANDS	inc/lmic.h	/^enum { MAX_BANDS    =  4 };$/;"	e	enum:__anon15
MAX_CHANNELS	inc/lmic.h	/^enum { MAX_CHANNELS = 16 };      \/\/!< Max supported channels$/;"	e	enum:__anon14
MAX_FRAME_LEN	inc/lmic.h	/^enum { MAX_FRAME_LEN      =  64 };   \/\/!< Library cap on max frame length$/;"	e	enum:__anon4
MAX_LEN_FRAME	inc/lorabase.h	/^enum { MAX_LEN_FRAME     = 64 };$/;"	e	enum:__anon31
MAX_LEN_PAYLOAD	inc/lorabase.h	/^enum { MAX_LEN_PAYLOAD = MAX_LEN_FRAME-(int)OFF_DAT_OPTS-4 };$/;"	e	enum:__anon83
MAX_MISSED_BCNS	inc/lmic.h	/^enum { MAX_MISSED_BCNS    =  20 };   \/\/ threshold for triggering rejoin requests$/;"	e	enum:__anon6
MAX_RXSYMS	inc/lmic.h	/^enum { MAX_RXSYMS         = 100 };   \/\/ stop tracking beacon beyond this$/;"	e	enum:__anon7
MAX_TXPOW_125kHz	inc/lmic.h	/^enum { MAX_TXPOW_125kHz = 30 };$/;"	e	enum:__anon18
MAX_XCHANNELS	inc/lmic.h	/^enum { MAX_XCHANNELS = 2 };      \/\/ extra channels in RAM, channels 0-71 are immutable $/;"	e	enum:__anon17
MCMD_BCNI_ANS	inc/lorabase.h	/^    MCMD_BCNI_ANS = 0x12, \/\/ next beacon start  : u2: delay(in TUNIT millis), u1:channel$/;"	e	enum:__anon92
MCMD_BCNI_REQ	inc/lorabase.h	/^    MCMD_BCNI_REQ = 0x12, \/\/ -  next beacon start  : -$/;"	e	enum:__anon91
MCMD_BCNI_TUNIT	inc/lorabase.h	/^    MCMD_BCNI_TUNIT = 30  \/\/ time unit of delay value in millis$/;"	e	enum:__anon93
MCMD_DCAP_ANS	inc/lorabase.h	/^    MCMD_DCAP_ANS = 0x04, \/\/ -  duty cycle answer  : -$/;"	e	enum:__anon91
MCMD_DCAP_REQ	inc/lorabase.h	/^    MCMD_DCAP_REQ = 0x04, \/\/ duty cycle cap     : u1:255 dead [7-4]:RFU, [3-0]:cap 2^-k$/;"	e	enum:__anon92
MCMD_DEVS_ANS	inc/lorabase.h	/^    MCMD_DEVS_ANS = 0x06, \/\/ -  device status ans  : u1:battery 0,1-254,255=?, u1:7-6:RFU,5-0:margin(-32..31)$/;"	e	enum:__anon91
MCMD_DEVS_BATT_MAX	inc/lorabase.h	/^    MCMD_DEVS_BATT_MAX    = 0xFE, \/\/ max battery value$/;"	e	enum:__anon98
MCMD_DEVS_BATT_MIN	inc/lorabase.h	/^    MCMD_DEVS_BATT_MIN    = 0x01, \/\/ min battery value$/;"	e	enum:__anon98
MCMD_DEVS_BATT_NOINFO	inc/lorabase.h	/^    MCMD_DEVS_BATT_NOINFO = 0xFF, \/\/ unknown battery level$/;"	e	enum:__anon98
MCMD_DEVS_EXT_POWER	inc/lorabase.h	/^    MCMD_DEVS_EXT_POWER   = 0x00, \/\/ external power supply$/;"	e	enum:__anon98
MCMD_DEVS_REQ	inc/lorabase.h	/^    MCMD_DEVS_REQ = 0x06, \/\/ device status req  : -$/;"	e	enum:__anon92
MCMD_DN2P_ANS	inc/lorabase.h	/^    MCMD_DN2P_ANS = 0x05, \/\/ -  2nd DN slot status : u1:7-2:RFU  1\/0:datarate\/channel ack$/;"	e	enum:__anon91
MCMD_DN2P_ANS_CHACK	inc/lorabase.h	/^    MCMD_DN2P_ANS_CHACK  = 0x01, \/\/ 0=unknown channel enabled$/;"	e	enum:__anon95
MCMD_DN2P_ANS_DRACK	inc/lorabase.h	/^    MCMD_DN2P_ANS_DRACK  = 0x02, \/\/ 0=unknown data rate$/;"	e	enum:__anon95
MCMD_DN2P_ANS_RFU	inc/lorabase.h	/^    MCMD_DN2P_ANS_RFU    = 0xFC, \/\/ RFU bits$/;"	e	enum:__anon95
MCMD_DN2P_SET	inc/lorabase.h	/^    MCMD_DN2P_SET = 0x05, \/\/ 2nd DN window param: u1:7-4:RFU\/3-0:datarate, u3:freq$/;"	e	enum:__anon92
MCMD_LADR_11dBm	inc/lorabase.h	/^    MCMD_LADR_11dBm     = 2,$/;"	e	enum:__anon100
MCMD_LADR_14dBm	inc/lorabase.h	/^    MCMD_LADR_14dBm     = 1,$/;"	e	enum:__anon100
MCMD_LADR_20dBm	inc/lorabase.h	/^    MCMD_LADR_20dBm     = 0,$/;"	e	enum:__anon100
MCMD_LADR_2dBm	inc/lorabase.h	/^    MCMD_LADR_2dBm      = 5,$/;"	e	enum:__anon100
MCMD_LADR_5dBm	inc/lorabase.h	/^    MCMD_LADR_5dBm      = 4,$/;"	e	enum:__anon100
MCMD_LADR_8dBm	inc/lorabase.h	/^    MCMD_LADR_8dBm      = 3,$/;"	e	enum:__anon100
MCMD_LADR_ANS	inc/lorabase.h	/^    MCMD_LADR_ANS = 0x03, \/\/ -  link ADR answer    : u1:7-3:RFU, 3\/2\/1: pow\/DR\/Ch ACK$/;"	e	enum:__anon91
MCMD_LADR_ANS_CHACK	inc/lorabase.h	/^    MCMD_LADR_ANS_CHACK  = 0x01, \/\/ 0=unknown channel enabled$/;"	e	enum:__anon94
MCMD_LADR_ANS_DRACK	inc/lorabase.h	/^    MCMD_LADR_ANS_DRACK  = 0x02, \/\/ 0=unknown data rate$/;"	e	enum:__anon94
MCMD_LADR_ANS_POWACK	inc/lorabase.h	/^    MCMD_LADR_ANS_POWACK = 0x04, \/\/ 0=not supported power level$/;"	e	enum:__anon94
MCMD_LADR_ANS_RFU	inc/lorabase.h	/^    MCMD_LADR_ANS_RFU    = 0xF8, \/\/ RFU bits$/;"	e	enum:__anon94
MCMD_LADR_CHPAGE_1	inc/lorabase.h	/^    MCMD_LADR_CHPAGE_1    = 0x10$/;"	e	enum:__anon99
MCMD_LADR_CHPAGE_MASK	inc/lorabase.h	/^    MCMD_LADR_CHPAGE_MASK = 0xF0,$/;"	e	enum:__anon99
MCMD_LADR_CHP_125OFF	inc/lorabase.h	/^    MCMD_LADR_CHP_125OFF  = 0x70,  \/\/  ditto$/;"	e	enum:__anon99
MCMD_LADR_CHP_125ON	inc/lorabase.h	/^    MCMD_LADR_CHP_125ON   = 0x60,  \/\/ special channel page enable, bits applied to 64..71$/;"	e	enum:__anon99
MCMD_LADR_DR_MASK	inc/lorabase.h	/^    MCMD_LADR_DR_MASK    = 0xF0,$/;"	e	enum:__anon100
MCMD_LADR_DR_SHIFT	inc/lorabase.h	/^    MCMD_LADR_DR_SHIFT   = 4,$/;"	e	enum:__anon100
MCMD_LADR_FSK	inc/lorabase.h	/^    MCMD_LADR_FSK       = DR_FSK <<4,$/;"	e	enum:__anon100
MCMD_LADR_N3RFU_MASK	inc/lorabase.h	/^    MCMD_LADR_N3RFU_MASK  = 0x80,$/;"	e	enum:__anon99
MCMD_LADR_POW_MASK	inc/lorabase.h	/^    MCMD_LADR_POW_MASK   = 0x0F,$/;"	e	enum:__anon100
MCMD_LADR_POW_SHIFT	inc/lorabase.h	/^    MCMD_LADR_POW_SHIFT  = 0,$/;"	e	enum:__anon100
MCMD_LADR_REPEAT_1	inc/lorabase.h	/^    MCMD_LADR_REPEAT_1    = 0x01,$/;"	e	enum:__anon99
MCMD_LADR_REPEAT_MASK	inc/lorabase.h	/^    MCMD_LADR_REPEAT_MASK = 0x0F,$/;"	e	enum:__anon99
MCMD_LADR_REQ	inc/lorabase.h	/^    MCMD_LADR_REQ = 0x03, \/\/ link ADR request   : u1:DR\/TXPow, u2:chmask, u1:chpage\/repeat$/;"	e	enum:__anon92
MCMD_LADR_SF10	inc/lorabase.h	/^    MCMD_LADR_SF10      = DR_SF10<<4,$/;"	e	enum:__anon100
MCMD_LADR_SF11	inc/lorabase.h	/^    MCMD_LADR_SF11      = DR_SF11<<4,$/;"	e	enum:__anon100
MCMD_LADR_SF12	inc/lorabase.h	/^    MCMD_LADR_SF12      = DR_SF12<<4,$/;"	e	enum:__anon100
MCMD_LADR_SF7	inc/lorabase.h	/^    MCMD_LADR_SF7       = DR_SF7 <<4,$/;"	e	enum:__anon100
MCMD_LADR_SF7B	inc/lorabase.h	/^    MCMD_LADR_SF7B      = DR_SF7B<<4,$/;"	e	enum:__anon100
MCMD_LADR_SF8	inc/lorabase.h	/^    MCMD_LADR_SF8       = DR_SF8 <<4,$/;"	e	enum:__anon100
MCMD_LADR_SF9	inc/lorabase.h	/^    MCMD_LADR_SF9       = DR_SF9 <<4,$/;"	e	enum:__anon100
MCMD_LCHK_ANS	inc/lorabase.h	/^    MCMD_LCHK_ANS = 0x02, \/\/ link check answer  : u1:margin 0-254,255=unknown margin \/ u1:gwcnt$/;"	e	enum:__anon92
MCMD_LCHK_REQ	inc/lorabase.h	/^    MCMD_LCHK_REQ = 0x02, \/\/ -  link check request : -$/;"	e	enum:__anon91
MCMD_PING_ANS	inc/lorabase.h	/^    MCMD_PING_ANS = 0x11, \/\/ -  ack ping freq      : u1: 7-1:RFU, 0:freq ok$/;"	e	enum:__anon91
MCMD_PING_ANS_FQACK	inc/lorabase.h	/^    MCMD_PING_ANS_FQACK = 0x01$/;"	e	enum:__anon97
MCMD_PING_ANS_RFU	inc/lorabase.h	/^    MCMD_PING_ANS_RFU   = 0xFE,$/;"	e	enum:__anon97
MCMD_PING_IND	inc/lorabase.h	/^    MCMD_PING_IND = 0x10, \/\/ -  pingability indic  : u1: 7=RFU, 6-4:interval, 3-0:datarate$/;"	e	enum:__anon91
MCMD_PING_SET	inc/lorabase.h	/^    MCMD_PING_SET = 0x11, \/\/ set ping freq      : u3: freq$/;"	e	enum:__anon92
MCMD_SNCH_ANS	inc/lorabase.h	/^    MCMD_SNCH_ANS = 0x07, \/\/ -  set new channel    : u1: 7-2=RFU, 1\/0:DR\/freq ACK$/;"	e	enum:__anon91
MCMD_SNCH_ANS_DRACK	inc/lorabase.h	/^    MCMD_SNCH_ANS_DRACK  = 0x02, \/\/ 0=unknown data rate$/;"	e	enum:__anon96
MCMD_SNCH_ANS_FQACK	inc/lorabase.h	/^    MCMD_SNCH_ANS_FQACK  = 0x01, \/\/ 0=rejected channel frequency$/;"	e	enum:__anon96
MCMD_SNCH_ANS_RFU	inc/lorabase.h	/^    MCMD_SNCH_ANS_RFU    = 0xFC, \/\/ RFU bits$/;"	e	enum:__anon96
MCMD_SNCH_REQ	inc/lorabase.h	/^    MCMD_SNCH_REQ = 0x07, \/\/ set new channel    : u1:chidx, u3:freq, u1:DRrange$/;"	e	enum:__anon92
MCU	Makefile	/^MCU = mcu=atmega328p$/;"	m
MINRX_SYMS	src/lmic.c	32;"	d	file:
MODE_WORK	inc/config.h	10;"	d
NETID_MASK	inc/lmic.h	/^enum { NETID_NONE=(int)~0U, NETID_MASK=(int)0xFFFFFF };$/;"	e	enum:__anon23
NETID_NONE	inc/lmic.h	/^enum { NETID_NONE=(int)~0U, NETID_MASK=(int)0xFFFFFF };$/;"	e	enum:__anon23
NSS_DDR	inc/hal.h	55;"	d
NSS_PIN	inc/hal.h	57;"	d
NSS_PORT	inc/hal.h	53;"	d
NUM_DEFAULT_CHANNELS	src/lmic.c	/^enum { NUM_DEFAULT_CHANNELS=6 };$/;"	e	enum:__anon3	file:
NWKID_BITS	inc/lorabase.h	/^    NWKID_BITS = 7$/;"	e	enum:__anon90
NWKID_MASK	inc/lorabase.h	/^    NWKID_MASK = (int)0xFE000000,$/;"	e	enum:__anon90
NWKSKEY	src/main.c	/^static  u1_t NWKSKEY[16] = { 0x70, 0x9A, 0x66, 0x6B, 0x26, 0x11, 0x1E, 0x90, 0xDD, 0xD3, 0x7F, 0x4E, 0x59, 0x69, 0x73, 0xB2 };$/;"	v	file:
OBJECTS	Makefile	/^OBJECTS = $(addprefix $(BUILD_DIR)\/,$(notdir $(C_SOURCES:.c=.o)))$/;"	m
OD	Makefile	/^OD = avr-objdump$/;"	m
OFF_BCN_CRC1	inc/lorabase.h	/^    OFF_BCN_CRC1     = 7,$/;"	e	enum:__anon65
OFF_BCN_CRC1	inc/lorabase.h	/^    OFF_BCN_CRC1     = 7,$/;"	e	enum:__anon79
OFF_BCN_CRC2	inc/lorabase.h	/^    OFF_BCN_CRC2     = 15,$/;"	e	enum:__anon65
OFF_BCN_CRC2	inc/lorabase.h	/^    OFF_BCN_CRC2     = 17,$/;"	e	enum:__anon79
OFF_BCN_INFO	inc/lorabase.h	/^    OFF_BCN_INFO     = 8,$/;"	e	enum:__anon65
OFF_BCN_INFO	inc/lorabase.h	/^    OFF_BCN_INFO     = 9,$/;"	e	enum:__anon79
OFF_BCN_LAT	inc/lorabase.h	/^    OFF_BCN_LAT      = 10,$/;"	e	enum:__anon79
OFF_BCN_LAT	inc/lorabase.h	/^    OFF_BCN_LAT      = 9,$/;"	e	enum:__anon65
OFF_BCN_LON	inc/lorabase.h	/^    OFF_BCN_LON      = 12,$/;"	e	enum:__anon65
OFF_BCN_LON	inc/lorabase.h	/^    OFF_BCN_LON      = 13,$/;"	e	enum:__anon79
OFF_BCN_NETID	inc/lorabase.h	/^    OFF_BCN_NETID    = 0,         $/;"	e	enum:__anon65
OFF_BCN_NETID	inc/lorabase.h	/^    OFF_BCN_NETID    = 0,         $/;"	e	enum:__anon79
OFF_BCN_RFU1	inc/lorabase.h	/^    OFF_BCN_RFU1     = 16,$/;"	e	enum:__anon79
OFF_BCN_TIME	inc/lorabase.h	/^    OFF_BCN_TIME     = 3,$/;"	e	enum:__anon65
OFF_BCN_TIME	inc/lorabase.h	/^    OFF_BCN_TIME     = 3,$/;"	e	enum:__anon79
OFF_CFLIST	inc/lorabase.h	/^    OFF_CFLIST      = 13,$/;"	e	enum:__anon81
OFF_DAT_ADDR	inc/lorabase.h	/^    OFF_DAT_ADDR     = 1,$/;"	e	enum:__anon82
OFF_DAT_FCT	inc/lorabase.h	/^    OFF_DAT_FCT      = 5,$/;"	e	enum:__anon82
OFF_DAT_HDR	inc/lorabase.h	/^    OFF_DAT_HDR      = 0,$/;"	e	enum:__anon82
OFF_DAT_OPTS	inc/lorabase.h	/^    OFF_DAT_OPTS     = 8,$/;"	e	enum:__anon82
OFF_DAT_SEQNO	inc/lorabase.h	/^    OFF_DAT_SEQNO    = 6,$/;"	e	enum:__anon82
OFF_JA_ARTNONCE	inc/lorabase.h	/^    OFF_JA_ARTNONCE = 1,$/;"	e	enum:__anon81
OFF_JA_DEVADDR	inc/lorabase.h	/^    OFF_JA_DEVADDR  = 7,$/;"	e	enum:__anon81
OFF_JA_DLSET	inc/lorabase.h	/^    OFF_JA_DLSET    = 11,$/;"	e	enum:__anon81
OFF_JA_HDR	inc/lorabase.h	/^    OFF_JA_HDR      = 0,$/;"	e	enum:__anon81
OFF_JA_NETID	inc/lorabase.h	/^    OFF_JA_NETID    = 4,$/;"	e	enum:__anon81
OFF_JA_RFU	inc/lorabase.h	/^    OFF_JA_RFU      = 11,$/;"	e	enum:__anon81
OFF_JA_RXDLY	inc/lorabase.h	/^    OFF_JA_RXDLY    = 12,$/;"	e	enum:__anon81
OFF_JR_ARTEUI	inc/lorabase.h	/^    OFF_JR_ARTEUI   = 1,$/;"	e	enum:__anon80
OFF_JR_DEVEUI	inc/lorabase.h	/^    OFF_JR_DEVEUI   = 9,$/;"	e	enum:__anon80
OFF_JR_DEVNONCE	inc/lorabase.h	/^    OFF_JR_DEVNONCE = 17,$/;"	e	enum:__anon80
OFF_JR_HDR	inc/lorabase.h	/^    OFF_JR_HDR      = 0,$/;"	e	enum:__anon80
OFF_JR_MIC	inc/lorabase.h	/^    OFF_JR_MIC      = 19,$/;"	e	enum:__anon80
ONE_CHANEL	inc/config.h	7;"	d
ON_LMIC_EVENT	inc/oslmic.h	81;"	d
OPMODE_CAD	src/radio.c	209;"	d	file:
OPMODE_FSRX	src/radio.c	206;"	d	file:
OPMODE_FSTX	src/radio.c	204;"	d	file:
OPMODE_LORA	src/radio.c	200;"	d	file:
OPMODE_MASK	src/radio.c	201;"	d	file:
OPMODE_RX	src/radio.c	207;"	d	file:
OPMODE_RX_SINGLE	src/radio.c	208;"	d	file:
OPMODE_SLEEP	src/radio.c	202;"	d	file:
OPMODE_STANDBY	src/radio.c	203;"	d	file:
OPMODE_TX	src/radio.c	205;"	d	file:
OPT	Makefile	/^OPT = -Os$/;"	m
OP_JOINING	inc/lmic.h	/^       OP_JOINING  = 0x0004, \/\/ device joining in progress (blocks other activities)$/;"	e	enum:__anon24
OP_LINKDEAD	inc/lmic.h	/^       OP_LINKDEAD = 0x1000, \/\/ link was reported as dead$/;"	e	enum:__anon24
OP_NEXTCHNL	inc/lmic.h	/^       OP_NEXTCHNL = 0x0800, \/\/ find a new channel$/;"	e	enum:__anon24
OP_NONE	inc/lmic.h	/^enum { OP_NONE     = 0x0000,$/;"	e	enum:__anon24
OP_PINGABLE	inc/lmic.h	/^       OP_PINGABLE = 0x0400, \/\/ we're pingable$/;"	e	enum:__anon24
OP_PINGINI	inc/lmic.h	/^       OP_PINGINI  = 0x0200, \/\/ pingable is initialized and scheduling active$/;"	e	enum:__anon24
OP_POLL	inc/lmic.h	/^       OP_POLL     = 0x0010, \/\/ send empty UP frame to ACK confirmed DN\/fetch more DN data$/;"	e	enum:__anon24
OP_REJOIN	inc/lmic.h	/^       OP_REJOIN   = 0x0020, \/\/ occasionally send JOIN REQUEST$/;"	e	enum:__anon24
OP_RNDTX	inc/lmic.h	/^       OP_RNDTX    = 0x0100, \/\/ prevent TX lining up after a beacon$/;"	e	enum:__anon24
OP_SCAN	inc/lmic.h	/^       OP_SCAN     = 0x0001, \/\/ radio scan to find a beacon$/;"	e	enum:__anon24
OP_SHUTDOWN	inc/lmic.h	/^       OP_SHUTDOWN = 0x0040, \/\/ prevent MAC from doing anything$/;"	e	enum:__anon24
OP_TESTMODE	inc/lmic.h	/^       OP_TESTMODE = 0x2000, \/\/ developer test mode$/;"	e	enum:__anon24
OP_TRACK	inc/lmic.h	/^       OP_TRACK    = 0x0002, \/\/ track my networks beacon (netid)$/;"	e	enum:__anon24
OP_TXDATA	inc/lmic.h	/^       OP_TXDATA   = 0x0008, \/\/ TX user data (buffered in pendTxData)$/;"	e	enum:__anon24
OP_TXRXPEND	inc/lmic.h	/^       OP_TXRXPEND = 0x0080, \/\/ TX\/RX transaction pending$/;"	e	enum:__anon24
OS	src/oslmic.c	/^} OS;$/;"	v	typeref:struct:__anon1	file:
OSTICKS_PER_SEC	inc/oslmic.h	112;"	d
OTTA_METHOD	inc/config.h	13;"	d
OW_DATA_ERR	inc/onewire.h	31;"	d
OW_DDR	inc/onewire.h	21;"	d
OW_DIR_IN	src/onewire.c	18;"	d	file:
OW_DIR_OUT	src/onewire.c	19;"	d	file:
OW_GET_IN	src/onewire.c	15;"	d	file:
OW_IN	inc/onewire.h	22;"	d
OW_LAST_DEVICE	inc/onewire.h	32;"	d
OW_MATCH_ROM	inc/onewire.h	25;"	d
OW_OUT	inc/onewire.h	20;"	d
OW_OUT_HIGH	src/onewire.c	17;"	d	file:
OW_OUT_LOW	src/onewire.c	16;"	d	file:
OW_PIN	inc/onewire.h	23;"	d
OW_PRESENCE_ERR	inc/onewire.h	30;"	d
OW_ROMCODE_SIZE	inc/onewire.h	36;"	d
OW_SEARCH_FIRST	inc/onewire.h	29;"	d
OW_SEARCH_ROM	inc/onewire.h	27;"	d
OW_SKIP_ROM	inc/onewire.h	26;"	d
PAD_RIGHT	src/printf-stdarg.c	62;"	d	file:
PAD_ZERO	src/printf-stdarg.c	63;"	d	file:
PAMBL_FSK	src/lmic.c	35;"	d	file:
PAMBL_SYMS	src/lmic.c	34;"	d	file:
PARSER_INC	inc/gps.h	2;"	d
PRERX_FSK	src/lmic.c	36;"	d	file:
PRINTFSTDARG_INC	inc/printf-stdarg.h	2;"	d
PRINT_BUF_LEN	src/printf-stdarg.c	96;"	d	file:
RADIO_RST	inc/lmic.h	/^enum { RADIO_RST=0, RADIO_TX=1, RADIO_RX=2, RADIO_RXON=3 };$/;"	e	enum:__anon22
RADIO_RX	inc/lmic.h	/^enum { RADIO_RST=0, RADIO_TX=1, RADIO_RX=2, RADIO_RXON=3 };$/;"	e	enum:__anon22
RADIO_RXON	inc/lmic.h	/^enum { RADIO_RST=0, RADIO_TX=1, RADIO_RX=2, RADIO_RXON=3 };$/;"	e	enum:__anon22
RADIO_TX	inc/lmic.h	/^enum { RADIO_RST=0, RADIO_TX=1, RADIO_RX=2, RADIO_RXON=3 };$/;"	e	enum:__anon22
RESOLVE_TABLE	inc/oslmic.h	251;"	d
RETRY_PERIOD_secs	inc/lmic.h	/^enum { RETRY_PERIOD_secs  =     3 };  \/\/ secs - random period for retrying a confirmed send$/;"	e	enum:__anon13
RETURN_NEWLINE	inc/gps.h	23;"	d
RF_IMAGECAL_AUTOIMAGECAL_MASK	src/radio.c	254;"	d	file:
RF_IMAGECAL_AUTOIMAGECAL_OFF	src/radio.c	256;"	d	file:
RF_IMAGECAL_AUTOIMAGECAL_ON	src/radio.c	255;"	d	file:
RF_IMAGECAL_IMAGECAL_DONE	src/radio.c	262;"	d	file:
RF_IMAGECAL_IMAGECAL_MASK	src/radio.c	258;"	d	file:
RF_IMAGECAL_IMAGECAL_RUNNING	src/radio.c	261;"	d	file:
RF_IMAGECAL_IMAGECAL_START	src/radio.c	259;"	d	file:
RM	Makefile	/^RM = rm$/;"	m
RSSI_OFF	inc/lorabase.h	/^enum { RSSI_OFF=64, SNR_SCALEUP=4 };$/;"	e	enum:__anon101
RST_DDR	inc/hal.h	56;"	d
RST_PIN	inc/hal.h	58;"	d
RST_PORT	inc/hal.h	54;"	d
RXLEN_FSK	src/lmic.c	37;"	d	file:
RXLORA_RXMODE_RSSI_REG_MODEM_CONFIG1	src/radio.c	189;"	d	file:
RXLORA_RXMODE_RSSI_REG_MODEM_CONFIG2	src/radio.c	191;"	d	file:
RXLORA_RXMODE_RSSI_REG_MODEM_CONFIG2	src/radio.c	193;"	d	file:
RXMODE_RSSI	src/radio.c	/^enum { RXMODE_SINGLE, RXMODE_SCAN, RXMODE_RSSI };$/;"	e	enum:__anon2	file:
RXMODE_SCAN	src/radio.c	/^enum { RXMODE_SINGLE, RXMODE_SCAN, RXMODE_RSSI };$/;"	e	enum:__anon2	file:
RXMODE_SINGLE	src/radio.c	/^enum { RXMODE_SINGLE, RXMODE_SCAN, RXMODE_RSSI };$/;"	e	enum:__anon2	file:
RX_RAMPUP	inc/oslmic.h	105;"	d
RegDioMapping1	src/radio.c	127;"	d	file:
RegDioMapping2	src/radio.c	128;"	d	file:
RegFifo	src/radio.c	32;"	d	file:
RegFrfLsb	src/radio.c	40;"	d	file:
RegFrfMid	src/radio.c	39;"	d	file:
RegFrfMsb	src/radio.c	38;"	d	file:
RegLna	src/radio.c	44;"	d	file:
RegOcp	src/radio.c	43;"	d	file:
RegOpMode	src/radio.c	33;"	d	file:
RegPaConfig	src/radio.c	41;"	d	file:
RegPaDac	src/radio.c	136;"	d	file:
RegPaRamp	src/radio.c	42;"	d	file:
RegVersion	src/radio.c	129;"	d	file:
SATELITE_BUF	inc/gps.h	16;"	d
SENSITIVITY	src/lmic.c	/^static const u1_t SENSITIVITY[7][3] = {$/;"	v	file:
SF10	inc/lorabase.h	/^enum _sf_t { FSK=0, SF7, SF8, SF9, SF10, SF11, SF12, SFrfu };$/;"	e	enum:_sf_t
SF11	inc/lorabase.h	/^enum _sf_t { FSK=0, SF7, SF8, SF9, SF10, SF11, SF12, SFrfu };$/;"	e	enum:_sf_t
SF12	inc/lorabase.h	/^enum _sf_t { FSK=0, SF7, SF8, SF9, SF10, SF11, SF12, SFrfu };$/;"	e	enum:_sf_t
SF7	inc/lorabase.h	/^enum _sf_t { FSK=0, SF7, SF8, SF9, SF10, SF11, SF12, SFrfu };$/;"	e	enum:_sf_t
SF8	inc/lorabase.h	/^enum _sf_t { FSK=0, SF7, SF8, SF9, SF10, SF11, SF12, SFrfu };$/;"	e	enum:_sf_t
SF9	inc/lorabase.h	/^enum _sf_t { FSK=0, SF7, SF8, SF9, SF10, SF11, SF12, SFrfu };$/;"	e	enum:_sf_t
SFrfu	inc/lorabase.h	/^enum _sf_t { FSK=0, SF7, SF8, SF9, SF10, SF11, SF12, SFrfu };$/;"	e	enum:_sf_t
SIZEOFEXPR	inc/oslmic.h	79;"	d
SNR_SCALEUP	inc/lorabase.h	/^enum { RSSI_OFF=64, SNR_SCALEUP=4 };$/;"	e	enum:__anon101
SPI_DDR	inc/hal.h	60;"	d
SPI_MISO	inc/hal.h	62;"	d
SPI_MOSI	inc/hal.h	61;"	d
SPI_PORT	inc/hal.h	59;"	d
SPI_SCK	inc/hal.h	63;"	d
SRC_DIR	Makefile	/^SRC_DIR = src\/$/;"	m
STD_PREAMBLE_LEN	inc/lorabase.h	/^enum { STD_PREAMBLE_LEN  =  8 };$/;"	e	enum:__anon30
SX1272_MC1_BW_125	src/radio.c	152;"	d	file:
SX1272_MC1_BW_250	src/radio.c	153;"	d	file:
SX1272_MC1_BW_500	src/radio.c	154;"	d	file:
SX1272_MC1_CR_4_5	src/radio.c	156;"	d	file:
SX1272_MC1_CR_4_6	src/radio.c	157;"	d	file:
SX1272_MC1_CR_4_7	src/radio.c	158;"	d	file:
SX1272_MC1_CR_4_8	src/radio.c	159;"	d	file:
SX1272_MC1_IMPLICIT_HEADER_MODE_ON	src/radio.c	160;"	d	file:
SX1272_MC1_LOW_DATA_RATE_OPTIMIZE	src/radio.c	162;"	d	file:
SX1272_MC1_RX_PAYLOAD_CRCON	src/radio.c	161;"	d	file:
SX1272_MC2_FSK	src/radio.c	144;"	d	file:
SX1272_MC2_SF10	src/radio.c	148;"	d	file:
SX1272_MC2_SF11	src/radio.c	149;"	d	file:
SX1272_MC2_SF12	src/radio.c	150;"	d	file:
SX1272_MC2_SF7	src/radio.c	145;"	d	file:
SX1272_MC2_SF8	src/radio.c	146;"	d	file:
SX1272_MC2_SF9	src/radio.c	147;"	d	file:
SX1272_PAC_PA_SELECT_PA_BOOST	src/radio.c	164;"	d	file:
SX1272_PAC_PA_SELECT_RFIO_PIN	src/radio.c	165;"	d	file:
SX1276_MC1_BW_125	src/radio.c	169;"	d	file:
SX1276_MC1_BW_250	src/radio.c	170;"	d	file:
SX1276_MC1_BW_500	src/radio.c	171;"	d	file:
SX1276_MC1_CR_4_5	src/radio.c	172;"	d	file:
SX1276_MC1_CR_4_6	src/radio.c	173;"	d	file:
SX1276_MC1_CR_4_7	src/radio.c	174;"	d	file:
SX1276_MC1_CR_4_8	src/radio.c	175;"	d	file:
SX1276_MC1_IMPLICIT_HEADER_MODE_ON	src/radio.c	177;"	d	file:
SX1276_MC2_RX_PAYLOAD_CRCON	src/radio.c	180;"	d	file:
SX1276_MC3_AGCAUTO	src/radio.c	184;"	d	file:
SX1276_MC3_LOW_DATA_RATE_OPTIMIZE	src/radio.c	183;"	d	file:
SZ	Makefile	/^SZ = avr-size$/;"	m
TABLE_GETTER	inc/oslmic.h	271;"	d
TABLE_GET_OSTIME	inc/oslmic.h	263;"	d
TABLE_GET_S1	inc/oslmic.h	258;"	d
TABLE_GET_S2	inc/oslmic.h	260;"	d
TABLE_GET_S4	inc/oslmic.h	262;"	d
TABLE_GET_U1	inc/oslmic.h	257;"	d
TABLE_GET_U1_TWODIM	inc/oslmic.h	264;"	d
TABLE_GET_U2	inc/oslmic.h	259;"	d
TABLE_GET_U4	inc/oslmic.h	261;"	d
TARGET	Makefile	/^TARGET = lora328$/;"	m
TIME_BUF	inc/gps.h	13;"	d
TIME_RESYNC	inc/lmic.h	/^enum { TIME_RESYNC        = 6*128 }; \/\/ secs$/;"	e	enum:__anon9
TRUE	inc/gps.h	19;"	d
TXCONF_ATTEMPTS	inc/lmic.h	/^enum { TXCONF_ATTEMPTS    =   8 };   \/\/!< Transmit attempts for confirmed frames$/;"	e	enum:__anon5
TXPOWLEVELS	src/lmic.c	/^static const s1_t TXPOWLEVELS[] = {$/;"	v	file:
TXRX_ACK	inc/lmic.h	/^enum { TXRX_ACK    = 0x80,   \/\/ confirmed UP frame was acked$/;"	e	enum:__anon25
TXRX_BCNEXT_secs	inc/lmic.h	/^enum { TXRX_BCNEXT_secs   =     2 };  \/\/ secs - earliest start after beacon time$/;"	e	enum:__anon12
TXRX_DNW1	inc/lmic.h	/^       TXRX_DNW1   = 0x01,   \/\/ received in 1st DN slot$/;"	e	enum:__anon25
TXRX_DNW2	inc/lmic.h	/^       TXRX_DNW2   = 0x02,   \/\/ received in 2dn DN slot$/;"	e	enum:__anon25
TXRX_GUARD_ms	inc/lmic.h	/^enum { TXRX_GUARD_ms      =  6000 };  \/\/ msecs - don't start TX-RX transaction before beacon$/;"	e	enum:__anon10
TXRX_GUARD_osticks	src/lmic.c	40;"	d	file:
TXRX_NACK	inc/lmic.h	/^       TXRX_NACK   = 0x40,   \/\/ confirmed UP frame was not acked$/;"	e	enum:__anon25
TXRX_NOPORT	inc/lmic.h	/^       TXRX_NOPORT = 0x20,   \/\/ set if a frame with a port was RXed, clr if no frame\/no port$/;"	e	enum:__anon25
TXRX_PING	inc/lmic.h	/^       TXRX_PING   = 0x04 }; \/\/ received in a scheduled RX slot$/;"	e	enum:__anon25
TXRX_PORT	inc/lmic.h	/^       TXRX_PORT   = 0x10,   \/\/ set if a frame with a port was RXed, LMIC.frame[LMIC.dataBeg-1] => port$/;"	e	enum:__anon25
TX_RAMPUP	inc/oslmic.h	108;"	d
TYPEDEF_xref2band_t	inc/oslmic.h	76;"	d
TYPEDEF_xref2chnldef_t	inc/oslmic.h	75;"	d
TYPEDEF_xref2osjob_t	inc/oslmic.h	77;"	d
TYPEDEF_xref2rps_t	inc/oslmic.h	73;"	d
TYPEDEF_xref2rxsched_t	inc/oslmic.h	74;"	d
US915_125kHz_UPFBASE	inc/lorabase.h	/^enum { US915_125kHz_UPFBASE = 902300000,$/;"	e	enum:__anon68
US915_125kHz_UPFSTEP	inc/lorabase.h	/^       US915_125kHz_UPFSTEP =    200000,$/;"	e	enum:__anon68
US915_500kHz_DNFBASE	inc/lorabase.h	/^       US915_500kHz_DNFBASE = 923300000,$/;"	e	enum:__anon68
US915_500kHz_DNFSTEP	inc/lorabase.h	/^       US915_500kHz_DNFSTEP =    600000$/;"	e	enum:__anon68
US915_500kHz_UPFBASE	inc/lorabase.h	/^       US915_500kHz_UPFBASE = 903000000,$/;"	e	enum:__anon68
US915_500kHz_UPFSTEP	inc/lorabase.h	/^       US915_500kHz_UPFSTEP =   1600000,$/;"	e	enum:__anon68
US915_FREQ_MAX	inc/lorabase.h	/^       US915_FREQ_MAX = 928000000 };$/;"	e	enum:__anon69
US915_FREQ_MIN	inc/lorabase.h	/^enum { US915_FREQ_MIN = 902000000,$/;"	e	enum:__anon69
USART_BAUDRATE	inc/hal.h	46;"	d
USART_RX_BUFFER_SIZE	inc/hal.h	50;"	d
USART_TX_BUFFER_SIZE	inc/hal.h	49;"	d
_1wire_h_	inc/onewire.h	2;"	d
_DR2RPS_CRC	src/lmic.c	/^const u1_t _DR2RPS_CRC[] = {$/;"	v
__anon102::dir_latit	inc/gps.h	/^	uint8_t dir_latit;$/;"	m	struct:__anon102	access:public
__anon102::dir_longit	inc/gps.h	/^	uint8_t dir_longit;$/;"	m	struct:__anon102	access:public
__anon102::height	inc/gps.h	/^	uint8_t height[HEIGHT_BUF];$/;"	m	struct:__anon102	access:public
__anon102::latitude	inc/gps.h	/^	uint8_t latitude[LATITUDE_BUF];$/;"	m	struct:__anon102	access:public
__anon102::longitude	inc/gps.h	/^	uint8_t longitude[LONGITUDE_BUF];$/;"	m	struct:__anon102	access:public
__anon102::num_satelites	inc/gps.h	/^	uint8_t num_satelites[SATELITE_BUF];$/;"	m	struct:__anon102	access:public
__anon102::quality	inc/gps.h	/^	uint8_t quality;$/;"	m	struct:__anon102	access:public
__anon102::time	inc/gps.h	/^	uint8_t time[TIME_BUF];$/;"	m	struct:__anon102	access:public
__anon1::runnablejobs	src/oslmic.c	/^    osjob_t* runnablejobs;$/;"	m	struct:__anon1	file:	access:public
__anon1::scheduledjobs	src/oslmic.c	/^    osjob_t* scheduledjobs;$/;"	m	struct:__anon1	file:	access:public
__io_putchar	src/printf-stdarg.c	/^int __io_putchar(int ch)$/;"	f	signature:(int ch)
_bw_t	inc/lorabase.h	/^enum _bw_t { BW125=0, BW250, BW500, BWrfu };$/;"	g
_cr_t	inc/lorabase.h	/^enum _cr_t { CR_4_5=0, CR_4_6, CR_4_7, CR_4_8 };$/;"	g
_dr_eu868_t	inc/lorabase.h	/^enum _dr_eu868_t { DR_SF12=0, DR_SF11, DR_SF10, DR_SF9, DR_SF8, DR_SF7, DR_SF7B, DR_FSK, DR_NONE };$/;"	g
_dr_us915_t	inc/lorabase.h	/^enum _dr_us915_t { DR_SF10=0, DR_SF9, DR_SF8, DR_SF7, DR_SF8C, DR_NONE,$/;"	g
_ev_t	inc/lmic.h	/^enum _ev_t { EV_SCAN_TIMEOUT=1, EV_BEACON_FOUND,$/;"	g
_hal_hpp_	inc/hal.h	29;"	d
_lmic_h_	inc/lmic.h	32;"	d
_lorabase_h_	inc/lorabase.h	29;"	d
_nextTx	src/lmic.c	/^static void _nextTx (void) {$/;"	f	file:	signature:(void)
_oslmic_h_	inc/oslmic.h	30;"	d
_sf_t	inc/lorabase.h	/^enum _sf_t { FSK=0, SF7, SF8, SF9, SF10, SF11, SF12, SFrfu };$/;"	g
_write	src/printf-stdarg.c	/^int _write(int file, char *ptr, int len)$/;"	f	signature:(int file, char *ptr, int len)
a0	src/aes.c	/^            u4_t a0, a1, a2, a3;$/;"	l
a1	src/aes.c	/^            u4_t a0, a1, a2, a3;$/;"	l
a2	src/aes.c	/^            u4_t a0, a1, a2, a3;$/;"	l
a3	src/aes.c	/^            u4_t a0, a1, a2, a3;$/;"	l
ackup	src/lmic.c	/^    int  ackup = (fct & FCT_ACK) != 0 ? 1 : 0;   \/\/ ACK last up frame$/;"	l
activat_method	src/main.c	/^uint8_t activat_method = ABP_METHOD; \/* 0 - ABP, 1 - OTTA *\/$/;"	v
addr	src/lmic.c	/^    u4_t addr  = os_rlsbf4(&d[OFF_DAT_ADDR]);$/;"	l
addr	src/lmic.c	/^    u4_t addr = os_rlsbf4(LMIC.frame+OFF_JA_DEVADDR);$/;"	l
adrAckReq	inc/lmic.h	/^    s1_t        adrAckReq;    \/\/ counter until we reset data rate (0=off)$/;"	m	struct:lmic_t	access:public
adrChanged	inc/lmic.h	/^    u1_t        adrChanged;$/;"	m	struct:lmic_t	access:public
adrEnabled	inc/lmic.h	/^    u1_t        adrEnabled;$/;"	m	struct:lmic_t	access:public
adrTxPow	inc/lmic.h	/^    s1_t        adrTxPow;     \/\/ ADR adjusted TX power$/;"	m	struct:lmic_t	access:public
aes_appendMic	src/lmic.c	/^static void aes_appendMic (xref2cu1_t key, u4_t devaddr, u4_t seqno, int dndir, xref2u1_t pdu, int len) {$/;"	f	file:	signature:(xref2cu1_t key, u4_t devaddr, u4_t seqno, int dndir, xref2u1_t pdu, int len)
aes_appendMic0	src/lmic.c	/^static void aes_appendMic0 (xref2u1_t pdu, int len) {$/;"	f	file:	signature:(xref2u1_t pdu, int len)
aes_cipher	src/lmic.c	/^static void aes_cipher (xref2cu1_t key, u4_t devaddr, u4_t seqno, int dndir, xref2u1_t payload, int len) {$/;"	f	file:	signature:(xref2cu1_t key, u4_t devaddr, u4_t seqno, int dndir, xref2u1_t payload, int len)
aes_encrypt	src/lmic.c	/^static void aes_encrypt (xref2u1_t pdu, int len) {$/;"	f	file:	signature:(xref2u1_t pdu, int len)
aes_sessKeys	src/lmic.c	/^static void aes_sessKeys (u2_t devnonce, xref2cu1_t artnonce, xref2u1_t nwkkey, xref2u1_t artkey) {$/;"	f	file:	signature:(u2_t devnonce, xref2cu1_t artnonce, xref2u1_t nwkkey, xref2u1_t artkey)
aes_verifyMic	src/lmic.c	/^static int aes_verifyMic (xref2cu1_t key, u4_t devaddr, u4_t seqno, int dndir, xref2u1_t pdu, int len) {$/;"	f	file:	signature:(xref2cu1_t key, u4_t devaddr, u4_t seqno, int dndir, xref2u1_t pdu, int len)
aes_verifyMic0	src/lmic.c	/^static int aes_verifyMic0 (xref2u1_t pdu, int len) {$/;"	f	file:	signature:(xref2u1_t pdu, int len)
aesroundkeys	src/aes.c	/^static void aesroundkeys () {$/;"	f	file:
airtime	src/lmic.c	/^        ostime_t airtime = calcAirTime(LMIC.rps, LMIC.dataLen);$/;"	l
airtime	src/lmic.c	/^    ostime_t airtime = calcAirTime(LMIC.rps, LMIC.dataLen);$/;"	l
appskey	src/main.c	/^	uint8_t appskey[sizeof(APPSKEY)];$/;"	l
args	src/printf-stdarg.c	/^        va_list args;$/;"	l
artKey	inc/lmic.h	/^    u1_t        artKey[16];   \/\/ application router session key$/;"	m	struct:lmic_t	access:public
assertDR	inc/lorabase.h	/^inline dr_t  assertDR (dr_t dr) { return _DR2RPS_CRC[dr+1]==ILLEGAL_RPS ? DR_DFLTMIN : dr; }   \/\/ force into a valid DR$/;"	f	signature:(dr_t dr)
assertDR	src/lmic.c	/^extern inline dr_t  assertDR (dr_t dr);$/;"	p	file:	signature:(dr_t dr)
avail	inc/lmic.h	/^    ostime_t avail;     \/\/ channel is blocked until this time$/;"	m	struct:band_t	access:public
b	src/aes.c	/^    u4_t b;$/;"	l
b	src/onewire.c	/^	uint8_t b;$/;"	l
b	src/radio.c	/^            u1_t b; \/\/ wait for two non-identical subsequent least-significant bits$/;"	l
band	src/lmic.c	/^        u1_t band=0;$/;"	l
band	src/lmic.c	/^    xref2band_t band = &LMIC.bands[freq & 0x3];$/;"	l
band_t	inc/lmic.h	/^struct band_t {$/;"	s
band_t	inc/oslmic.h	/^typedef      struct band_t band_t;$/;"	t	typeref:struct:band_t
band_t::avail	inc/lmic.h	/^    ostime_t avail;     \/\/ channel is blocked until this time$/;"	m	struct:band_t	access:public
band_t::lastchnl	inc/lmic.h	/^    u1_t     lastchnl;  \/\/ last used channel$/;"	m	struct:band_t	access:public
band_t::txcap	inc/lmic.h	/^    u2_t     txcap;     \/\/ duty cycle limitation: 1\/txcap$/;"	m	struct:band_t	access:public
band_t::txpow	inc/lmic.h	/^    s1_t     txpow;     \/\/ maximum TX power$/;"	m	struct:band_t	access:public
bands	inc/lmic.h	/^    band_t      bands[MAX_BANDS];$/;"	m	struct:lmic_t	access:public
bcnChnl	inc/lmic.h	/^    u1_t        bcnChnl;$/;"	m	struct:lmic_t	access:public
bcnRxsyms	inc/lmic.h	/^    u1_t        bcnRxsyms;    \/\/ $/;"	m	struct:lmic_t	access:public
bcnRxtime	inc/lmic.h	/^    ostime_t    bcnRxtime;$/;"	m	struct:lmic_t	access:public
bcninfo	inc/lmic.h	/^    bcninfo_t   bcninfo;      \/\/ Last received beacon info$/;"	m	struct:lmic_t	access:public
bcninfoTries	inc/lmic.h	/^    u1_t        bcninfoTries; \/\/ how often to try (scan mode only)$/;"	m	struct:lmic_t	access:public
bcninfo_t	inc/lmic.h	/^struct bcninfo_t {$/;"	s
bcninfo_t	inc/oslmic.h	/^typedef   struct bcninfo_t bcninfo_t;$/;"	t	typeref:struct:bcninfo_t
bcninfo_t::flags	inc/lmic.h	/^    u1_t     flags;   \/\/!< Last beacon reception and tracking states. See BCN_* values.$/;"	m	struct:bcninfo_t	access:public
bcninfo_t::info	inc/lmic.h	/^    u1_t     info;    \/\/!< Info field of last beacon (valid only if BCN_FULL set)$/;"	m	struct:bcninfo_t	access:public
bcninfo_t::lat	inc/lmic.h	/^    s4_t     lat;     \/\/!< Lat field of last beacon (valid only if BCN_FULL set)$/;"	m	struct:bcninfo_t	access:public
bcninfo_t::lon	inc/lmic.h	/^    s4_t     lon;     \/\/!< Lon field of last beacon (valid only if BCN_FULL set)$/;"	m	struct:bcninfo_t	access:public
bcninfo_t::rssi	inc/lmic.h	/^    s1_t     rssi;    \/\/!< Adjusted RSSI value of last received beacon$/;"	m	struct:bcninfo_t	access:public
bcninfo_t::snr	inc/lmic.h	/^    s1_t     snr;     \/\/!< Scaled SNR value of last received beacon$/;"	m	struct:bcninfo_t	access:public
bcninfo_t::time	inc/lmic.h	/^    u4_t     time;    \/\/!< GPS time in seconds of last beacon (received or surrogate)$/;"	m	struct:bcninfo_t	access:public
bcninfo_t::txtime	inc/lmic.h	/^    ostime_t txtime;  \/\/!< Time when the beacon was sent$/;"	m	struct:bcninfo_t	access:public
bit_counter	src/crc8.c	/^   uint8_t  bit_counter;$/;"	l
bit_t	inc/oslmic.h	/^typedef uint8_t            bit_t;$/;"	t
bmap	src/lmic.c	/^    u1_t bmap=0xF;$/;"	l
bs	src/printf-stdarg.c	/^	unsigned int bs = sizeof(int)*8;$/;"	l
buf	src/printf-stdarg.c	/^	char buf[80];$/;"	l
buffer	src/gps.c	/^  char buffer[8];$/;"	l
buildDataFrame	src/lmic.c	/^static void buildDataFrame (void) {$/;"	f	file:	signature:(void)
buildJoinRequest	src/lmic.c	/^static void buildJoinRequest (u1_t ftype) {$/;"	f	file:	signature:(u1_t ftype)
bw	src/lmic.c	/^    u1_t bw = getBw(rps);  \/\/ 0,1,2 = 125,250,500kHz$/;"	l
bw_t	inc/lorabase.h	/^typedef u1_t bw_t;$/;"	t
c	src/radio.c	/^    u1_t c = readReg(LORARegModemConfig2);$/;"	l
calcAirTime	inc/lorabase.h	/^ostime_t calcAirTime (rps_t rps, u1_t plen);$/;"	p	signature:(rps_t rps, u1_t plen)
calcAirTime	src/lmic.c	/^ostime_t calcAirTime (rps_t rps, u1_t plen) {$/;"	f	signature:(rps_t rps, u1_t plen)
calcBcnRxWindowFromMillis	src/lmic.c	/^static void calcBcnRxWindowFromMillis (u1_t ms, bit_t ini) {$/;"	f	file:	signature:(u1_t ms, bit_t ini)
calcRxWindow	src/lmic.c	/^static ostime_t calcRxWindow (u1_t secs, dr_t dr) {$/;"	f	file:	signature:(u1_t secs, dr_t dr)
cap	src/lmic.c	/^            u1_t cap = opts[oidx+1];$/;"	l
cel	src/ds18x20.c	/^	uint8_t cel = res_meas[1];$/;"	l
cel	src/ds18x20.c	/^	uint8_t subzero, cel, cel_frac_bits;$/;"	l
cel	src/main.c	/^	u1_t cel;$/;"	l
cel_frac_bits	src/ds18x20.c	/^	uint8_t cel_frac_bits = res_meas[2];$/;"	l
cel_frac_bits	src/ds18x20.c	/^	uint8_t subzero, cel, cel_frac_bits;$/;"	l
cel_frac_bits	src/main.c	/^	u1_t cel_frac_bits;$/;"	l
ch	src/gps.c	/^	uint8_t ch = UDR0;$/;"	l
chRnd	inc/lmic.h	/^    u2_t        chRnd;        \/\/ channel randomizer$/;"	m	struct:lmic_t	access:public
change_sep	src/gps.c	/^void change_sep(uint8_t* buf, uint8_t sep, uint8_t buf_size)$/;"	f	signature:(uint8_t* buf, uint8_t sep, uint8_t buf_size)
channelDrMap	inc/lmic.h	/^    u2_t        channelDrMap[MAX_CHANNELS];$/;"	m	struct:lmic_t	access:public
channelFreq	inc/lmic.h	/^    u4_t        channelFreq[MAX_CHANNELS];$/;"	m	struct:lmic_t	access:public
channelMap	inc/lmic.h	/^    u2_t        channelMap;$/;"	m	struct:lmic_t	access:public
channelMap	inc/lmic.h	/^    u2_t        channelMap[(72+MAX_XCHANNELS+15)\/16];  \/\/ enabled bits$/;"	m	struct:lmic_t	access:public
check_sizeof_ostime_t	inc/oslmic.h	/^    typedef int check_sizeof_ostime_t[(sizeof(ostime_t) == 4) ? 0 : -1];$/;"	t
chidx	src/lmic.c	/^            u1_t chidx = opts[oidx+1];  \/\/ channel$/;"	l
chmap	src/lmic.c	/^            u2_t chmap  = os_rlsbf2(&opts[oidx+2]);\/\/ list of enabled channels$/;"	l
chnl	src/lmic.c	/^            u1_t chnl = ++LMIC.chRnd & 0x3F;$/;"	l
chnl	src/lmic.c	/^        u1_t chnl = LMIC.bands[band].lastchnl;$/;"	l
chnl	src/lmic.c	/^    u1_t chnl = LMIC.txChnl;$/;"	l
chnldef_t	inc/oslmic.h	/^typedef   struct chnldef_t chnldef_t;$/;"	t	typeref:struct:chnldef_t
chpage	src/lmic.c	/^            u1_t chpage = opts[oidx+4] & MCMD_LADR_CHPAGE_MASK;     \/\/ channel page$/;"	l
cnt	src/hal.c	/^	u1_t cnt = TCNT0;$/;"	l
command_in	src/gps.c	/^char command_in[40];$/;"	v
configChannel	src/radio.c	/^static void configChannel () {$/;"	f	file:
configLoraModem	src/radio.c	/^static void configLoraModem () {$/;"	f	file:
configPower	src/radio.c	/^static void configPower () {$/;"	f	file:
convFreq	src/lmic.c	/^static u4_t convFreq (xref2u1_t ptr) {$/;"	f	file:	signature:(xref2u1_t ptr)
copy_buf	src/gps.c	/^static uint8_t copy_buf(uint8_t* in_buf, uint8_t in_idx, uint8_t sep, uint8_t* out_buf, uint8_t size_outBuf)$/;"	f	file:	signature:(uint8_t* in_buf, uint8_t in_idx, uint8_t sep, uint8_t* out_buf, uint8_t size_outBuf)
copy_command	src/gps.c	/^static void copy_command(void)$/;"	f	file:	signature:(void)
cr_t	inc/lorabase.h	/^typedef u1_t cr_t;$/;"	t
crc	src/crc8.c	/^ { uint8_t	 crc;$/;"	l
crc8	inc/crc8.h	/^uint8_t	crc8 (uint8_t* data_in, uint16_t number_of_bytes_to_read);$/;"	p	signature:(uint8_t* data_in, uint16_t number_of_bytes_to_read)
crc8	src/crc8.c	/^uint8_t	crc8 ( uint8_t *data_in, uint16_t number_of_bytes_to_read )$/;"	f	signature:( uint8_t *data_in, uint16_t number_of_bytes_to_read )
d	src/hal.c	/^    s4_t d = time - t;$/;"	l
d	src/lmic.c	/^    xref2u1_t d = LMIC.frame;$/;"	l
data	src/crc8.c	/^   uint8_t  data;$/;"	l
data	src/hal.c	/^        u1_t data = is_read ? 0x00 : *buf;$/;"	l
dataBeg	inc/lmic.h	/^    u1_t        dataBeg;    \/\/ 0 or start of data (dataBeg-1 is port)$/;"	m	struct:lmic_t	access:public
dataLen	inc/lmic.h	/^    u1_t        dataLen;    \/\/ 0 no data or zero length data, >0 byte count of data$/;"	m	struct:lmic_t	access:public
data_count	src/gps.c	/^uint8_t data_count = 0;$/;"	v
data_gps	inc/gps.h	/^GPS_t data_gps;$/;"	v
data_in	src/gps.c	/^char data_in[8];$/;"	v
datarate	inc/lmic.h	/^    u1_t        datarate;     \/\/ current data rate$/;"	m	struct:lmic_t	access:public
deadline	inc/oslmic.h	/^    ostime_t deadline;$/;"	m	struct:osjob_t	access:public
debug_event	src/main.c	/^void debug_event (int ev) {$/;"	f	signature:(int ev)
decDR	inc/lorabase.h	/^inline dr_t  decDR    (dr_t dr) { return _DR2RPS_CRC[dr  ]==ILLEGAL_RPS ? dr : (dr_t)(dr-1); } \/\/ decrease data rate$/;"	f	signature:(dr_t dr)
decDR	src/lmic.c	/^extern inline dr_t  decDR    (dr_t dr);$/;"	p	file:	signature:(dr_t dr)
decodeBeacon	src/lmic.c	/^static int decodeBeacon (void) {$/;"	f	file:	signature:(void)
decodeFrame	src/lmic.c	/^static bit_t decodeFrame (void) {$/;"	f	file:	signature:(void)
delay	src/lmic.c	/^        ostime_t delay = nextJoinState();$/;"	l
delay	src/lmic.c	/^    ostime_t delay = r;$/;"	l
deltaticks	src/hal.c	/^static u2_t deltaticks (u4_t time) {$/;"	f	file:	signature:(u4_t time)
devNonce	inc/lmic.h	/^    u2_t        devNonce;     \/\/ last generated nonce$/;"	m	struct:lmic_t	access:public
devadd	src/gps.c	/^				u4_t devadd;$/;"	l
devaddr	inc/lmic.h	/^    devaddr_t   devaddr;$/;"	m	struct:lmic_t	access:public
devaddr_t	inc/lorabase.h	/^typedef u4_t devaddr_t;$/;"	t
devsAns	inc/lmic.h	/^    bit_t       devsAns;      \/\/ device status answer pending$/;"	m	struct:lmic_t	access:public
diff	src/lmic.c	/^            s2_t diff = LMIC.drift - drift;$/;"	l
dir_latit	inc/gps.h	/^	uint8_t dir_latit;$/;"	m	struct:__anon102	access:public
dir_longit	inc/gps.h	/^	uint8_t dir_longit;$/;"	m	struct:__anon102	access:public
div	src/lmic.c	/^    int div = 15625;$/;"	l
dlen	src/lmic.c	/^    int  dlen   = LMIC.dataLen;$/;"	l
dlen	src/lmic.c	/^    u1_t dlen = LMIC.dataLen;$/;"	l
dlen	src/lmic.c	/^    u1_t dlen = txdata ? LMIC.pendTxLen : 0;$/;"	l
dn2Ans	inc/lmic.h	/^    u1_t        dn2Ans;       \/\/ 0=no answer pend, 0x80+ACKs$/;"	m	struct:lmic_t	access:public
dn2Dr	inc/lmic.h	/^    u1_t        dn2Dr;$/;"	m	struct:lmic_t	access:public
dn2Freq	inc/lmic.h	/^    u4_t        dn2Freq;$/;"	m	struct:lmic_t	access:public
dnConf	inc/lmic.h	/^    u1_t        dnConf;       \/\/ dn frame confirm pending: LORA::FCT_ACK or 0$/;"	m	struct:lmic_t	access:public
dndr	inc/lmic.h	/^    u1_t        dndr;$/;"	m	struct:lmic_t	access:public
dndr2rps	inc/lorabase.h	/^inline rps_t dndr2rps (dr_t dr) { return setNocrc(updr2rps(dr),1); }$/;"	f	signature:(dr_t dr)
dndr2rps	src/lmic.c	/^extern inline rps_t dndr2rps (dr_t dr);$/;"	p	file:	signature:(dr_t dr)
dr	inc/lmic.h	/^    u1_t     dr;$/;"	m	struct:rxsched_t	access:public
dr	src/lmic.c	/^            dr_t dr = (dr_t)(opts[oidx+1] & 0x0F);$/;"	l
dr	src/lmic.c	/^            dr_t dr = (dr_t)(p1>>MCMD_LADR_DR_SHIFT);$/;"	l
dr	src/lmic.c	/^        s1_t dr = DR_SF7 - ++LMIC.txCnt;$/;"	l
dr2hsym	src/lmic.c	384;"	d	file:
dr_t	inc/lorabase.h	/^typedef u1_t dr_t;$/;"	t
drift	inc/lmic.h	/^    s2_t        drift;        \/\/ last measured drift$/;"	m	struct:lmic_t	access:public
drift	src/lmic.c	/^        s2_t drift = BCN_INTV_osticks - (LMIC.bcninfo.txtime - lasttx);$/;"	l
drs	src/lmic.c	/^            u1_t drs   = opts[oidx+5];  \/\/ datarate span$/;"	l
dt	src/hal.c	/^	u2_t dt;$/;"	l
dutyCapAns	inc/lmic.h	/^    bit_t       dutyCapAns;   \/\/ have to ACK duty cycle settings$/;"	m	struct:lmic_t	access:public
eep_act_method	src/main.c	/^uint8_t EEMEM eep_act_method;$/;"	v
eep_appeui	src/main.c	/^u1_t EEMEM eep_appeui[8];$/;"	v
eep_appskey	src/main.c	/^u1_t EEMEM eep_appskey[16];$/;"	v
eep_devaddr	src/main.c	/^u4_t EEMEM eep_devaddr;$/;"	v
eep_deveui	src/main.c	/^u1_t EEMEM eep_deveui[8];$/;"	v
eep_mode_work	src/main.c	/^uint8_t EEMEM eep_mode_work = DS18B20_MODE;;$/;"	v
eep_nwkskey	src/main.c	/^u1_t EEMEM eep_nwkskey[16];$/;"	v
en125	src/lmic.c	/^        u2_t en125 = chpage == MCMD_LADR_CHP_125ON ? 0xFFFF : 0x0000;$/;"	l
end	src/lmic.c	/^    int  end = OFF_DAT_OPTS;$/;"	l
engineUpdate	src/lmic.c	/^static void engineUpdate (void) {$/;"	f	file:	signature:(void)
engineUpdate	src/lmic.c	/^static void engineUpdate(void);$/;"	p	file:	signature:(void)
err	src/lmic.c	/^    ostime_t rxoff, err;$/;"	l
err	src/onewire.c	/^	uint8_t err;$/;"	l
errcr	inc/lmic.h	/^    u1_t        errcr;        \/\/ error coding rate (used for TX only)$/;"	m	struct:lmic_t	access:public
ev	src/lmic.c	/^    ev_t ev;$/;"	l
ev_t	inc/lmic.h	/^typedef enum _ev_t ev_t;$/;"	t	typeref:enum:_ev_t
evnames	src/main.c	/^    static char* evnames[] = {$/;"	l	file:
failed	src/lmic.c	/^    u1_t failed = 0;$/;"	l
fct	src/lmic.c	/^    int  fct   = d[OFF_DAT_FCT];$/;"	l
feedback_bit	src/crc8.c	/^   uint8_t  feedback_bit;$/;"	l
flags	inc/lmic.h	/^    u1_t     flags;   \/\/!< Last beacon reception and tracking states. See BCN_* values.$/;"	m	struct:bcninfo_t	access:public
flags	src/lmic.c	/^            u1_t flags = 0x80;$/;"	l
flags	src/lmic.c	/^    u1_t flags = LMIC.bcninfo.flags;$/;"	l
flen	src/lmic.c	/^    u1_t flen = end + (txdata ? 5+dlen : 4);$/;"	l
frame	inc/lmic.h	/^    u1_t        frame[MAX_LEN_FRAME];$/;"	m	struct:lmic_t	access:public
freq	inc/lmic.h	/^    u4_t        freq;$/;"	m	struct:lmic_t	access:public
freq	inc/lmic.h	/^    u4_t     freq;$/;"	m	struct:rxsched_t	access:public
freq	src/lmic.c	/^            u4_t freq  = convFreq(&opts[oidx+2]); \/\/ freq$/;"	l
freq	src/lmic.c	/^            u4_t freq = convFreq(&LMIC.frame[dlen]);$/;"	l
freq	src/lmic.c	/^            u4_t freq = convFreq(&opts[oidx+1]);$/;"	l
freq	src/lmic.c	/^            u4_t freq = convFreq(&opts[oidx+2]);$/;"	l
freq	src/lmic.c	/^    u4_t freq = (os_rlsbf4(ptr-1) >> 8) * 100;$/;"	l
freq	src/lmic.c	/^    u4_t freq = LMIC.channelFreq[LMIC.txChnl];$/;"	l
frf	src/radio.c	/^    u4_t frf = 868000000;$/;"	l
frf	src/radio.c	/^    uint64_t frf = ((uint64_t)LMIC.freq << 19) \/ 32000000;$/;"	l
ftype	src/lmic.c	/^                u1_t ftype;$/;"	l
ftype	src/lmic.c	/^    u1_t ftype  = hdr & HDR_FTYPE;$/;"	l
func	inc/oslmic.h	/^    osjobcb_t  func;$/;"	m	struct:osjob_t	access:public
func	src/oslmic.c	/^            j->func(j);$/;"	p	file:
getBw	inc/lorabase.h	/^inline bw_t  getBw   (rps_t params)            { return  (bw_t)((params >> 3) & 0x3); }$/;"	f	signature:(rps_t params)
getBw	src/lmic.c	/^extern inline bw_t  getBw    (rps_t params);$/;"	p	file:	signature:(rps_t params)
getCr	inc/lorabase.h	/^inline cr_t  getCr   (rps_t params)            { return  (cr_t)((params >> 5) & 0x3); }$/;"	f	signature:(rps_t params)
getCr	src/lmic.c	/^extern inline cr_t  getCr    (rps_t params);$/;"	p	file:	signature:(rps_t params)
getIh	inc/lorabase.h	/^inline int   getIh   (rps_t params)            { return        ((params >> 8) & 0xFF); }$/;"	f	signature:(rps_t params)
getIh	src/lmic.c	/^extern inline int   getIh    (rps_t params);$/;"	p	file:	signature:(rps_t params)
getNocrc	inc/lorabase.h	/^inline int   getNocrc(rps_t params)            { return        ((params >> 7) & 0x1); }$/;"	f	signature:(rps_t params)
getNocrc	src/lmic.c	/^extern inline int   getNocrc (rps_t params);$/;"	p	file:	signature:(rps_t params)
getSensitivity	inc/lorabase.h	/^int getSensitivity (rps_t rps);$/;"	p	signature:(rps_t rps)
getSensitivity	src/lmic.c	/^int getSensitivity (rps_t rps) {$/;"	f	signature:(rps_t rps)
getSf	inc/lorabase.h	/^inline sf_t  getSf   (rps_t params)            { return   (sf_t)(params &  0x7); }$/;"	f	signature:(rps_t params)
getSf	src/lmic.c	/^extern inline sf_t  getSf    (rps_t params);$/;"	p	file:	signature:(rps_t params)
globalDutyAvail	inc/lmic.h	/^    ostime_t    globalDutyAvail; \/\/ time device can send again$/;"	m	struct:lmic_t	access:public
globalDutyRate	inc/lmic.h	/^    u1_t        globalDutyRate;  \/\/ max rate: 1\/2^k$/;"	m	struct:lmic_t	access:public
h	src/ds18x20.c	/^	uint16_t h;$/;"	l
hal_checkTimer	inc/hal.h	/^u2_t hal_checkTimer (u4_t targettime);$/;"	p	signature:(u4_t targettime)
hal_checkTimer	src/hal.c	/^u2_t hal_checkTimer (u4_t targettime)$/;"	f	signature:(u4_t targettime)
hal_deep_sleep	inc/hal.h	/^void hal_deep_sleep (u2_t ticks);$/;"	p	signature:(u2_t ticks)
hal_deep_sleep	src/hal.c	/^void hal_deep_sleep (u2_t ticks)$/;"	f	signature:(u2_t ticks)
hal_deep_sleep4ever	inc/hal.h	/^void hal_deep_sleep4ever (void);$/;"	p	signature:(void)
hal_deep_sleep4ever	src/hal.c	/^void hal_deep_sleep4ever (void)$/;"	f	signature:(void)
hal_disableIRQs	inc/hal.h	/^void hal_disableIRQs (void);$/;"	p	signature:(void)
hal_disableIRQs	src/hal.c	/^void hal_disableIRQs (void)$/;"	f	signature:(void)
hal_enableIRQs	inc/hal.h	/^void hal_enableIRQs (void);$/;"	p	signature:(void)
hal_enableIRQs	src/hal.c	/^void hal_enableIRQs (void)$/;"	f	signature:(void)
hal_failed	inc/hal.h	/^void hal_failed (void);$/;"	p	signature:(void)
hal_failed	src/hal.c	/^void hal_failed (void)$/;"	f	signature:(void)
hal_init	inc/hal.h	/^void hal_init (void);$/;"	p	signature:(void)
hal_init	src/hal.c	/^void hal_init (void)$/;"	f	signature:(void)
hal_pin_nss	inc/hal.h	/^void hal_pin_nss (u1_t val);$/;"	p	signature:(u1_t val)
hal_pin_nss	src/hal.c	/^void hal_pin_nss (u1_t val)$/;"	f	signature:(u1_t val)
hal_pin_rst	inc/hal.h	/^void hal_pin_rst (u1_t val);$/;"	p	signature:(u1_t val)
hal_pin_rst	src/hal.c	/^void hal_pin_rst (u1_t val)$/;"	f	signature:(u1_t val)
hal_pin_rxtx	inc/hal.h	/^void hal_pin_rxtx (u1_t val);$/;"	p	signature:(u1_t val)
hal_pin_rxtx	src/hal.c	/^void hal_pin_rxtx (u1_t val)$/;"	f	signature:(u1_t val)
hal_sleep	inc/hal.h	/^void hal_sleep (void);$/;"	p	signature:(void)
hal_sleep	src/hal.c	/^void hal_sleep (void)$/;"	f	signature:(void)
hal_spi	inc/hal.h	/^u1_t hal_spi (u1_t outval);$/;"	p	signature:(u1_t outval)
hal_spi	src/hal.c	/^u1_t hal_spi (u1_t outval)$/;"	f	signature:(u1_t outval)
hal_spi_read	inc/hal.h	/^void hal_spi_read(u1_t cmd, u1_t* buf, size_t len);$/;"	p	signature:(u1_t cmd, u1_t* buf, size_t len)
hal_spi_read	src/hal.c	/^void hal_spi_read(u1_t cmd, u1_t* buf, size_t len)$/;"	f	signature:(u1_t cmd, u1_t* buf, size_t len)
hal_spi_trx	src/hal.c	/^static void hal_spi_trx(u1_t cmd, u1_t* buf, size_t len, bit_t is_read) $/;"	f	file:	signature:(u1_t cmd, u1_t* buf, size_t len, bit_t is_read)
hal_spi_write	inc/hal.h	/^void hal_spi_write(u1_t cmd, const u1_t* buf, size_t len);$/;"	p	signature:(u1_t cmd, const u1_t* buf, size_t len)
hal_spi_write	src/hal.c	/^void hal_spi_write(u1_t cmd, const u1_t* buf, size_t len)$/;"	f	signature:(u1_t cmd, const u1_t* buf, size_t len)
hal_ticks	inc/hal.h	/^u4_t hal_ticks (void);$/;"	p	signature:(void)
hal_ticks	src/hal.c	/^u4_t hal_ticks (void)$/;"	f	signature:(void)
hal_time	src/hal.c	/^u4_t hal_time;$/;"	v
hal_waitUntil	inc/hal.h	/^void hal_waitUntil (u4_t time);$/;"	p	signature:(u4_t time)
hal_waitUntil	src/hal.c	/^void hal_waitUntil (u4_t time)$/;"	f	signature:(u4_t time)
hdr	src/lmic.c	/^    u1_t hdr    = d[0];$/;"	l
hdr	src/lmic.c	/^    u1_t hdr  = LMIC.frame[0];$/;"	l
height	inc/gps.h	/^	uint8_t height[HEIGHT_BUF];$/;"	m	struct:__anon102	access:public
hight	src/main.c	/^	uint16_t hight = ((data_gps.height[0] * 10) + data_gps.height[1]) * 100 +$/;"	l
hsym	src/lmic.c	/^    ostime_t hsym = dr2hsym(DR_BCN);$/;"	l
i	src/aes.c	/^    int i;$/;"	l
i	src/ds18x20.c	/^	uint8_t i;$/;"	l
i	src/ds18x20.c	/^{	uint8_t i;$/;"	l
i	src/gps.c	/^	uint8_t i = 0;$/;"	l
i	src/gps.c	/^	uint8_t i;$/;"	l
i	src/onewire.c	/^	uint8_t i = 8, j;$/;"	l
i	src/onewire.c	/^	uint8_t i, j, next_diff;$/;"	l
i	src/onewire.c	/^	uint8_t i;$/;"	l
i	src/printf-stdarg.c	/^	int i = 5;$/;"	l
i	src/radio.c	/^    u1_t i = randbuf[0];$/;"	l
idx	src/gps.c	/^	uint8_t idx = in_idx;$/;"	l
idx	src/gps.c	/^static volatile uint8_t idx;$/;"	v	file:
incDR	inc/lorabase.h	/^inline dr_t  incDR    (dr_t dr) { return _DR2RPS_CRC[dr+2]==ILLEGAL_RPS ? dr : (dr_t)(dr+1); } \/\/ increase data rate$/;"	f	signature:(dr_t dr)
incDR	src/lmic.c	/^extern inline dr_t  incDR    (dr_t dr);$/;"	p	file:	signature:(dr_t dr)
info	inc/lmic.h	/^    u1_t     info;    \/\/!< Info field of last beacon (valid only if BCN_FULL set)$/;"	m	struct:bcninfo_t	access:public
iniChannelFreq	src/lmic.c	/^static const u4_t iniChannelFreq[12] = {$/;"	v	file:
initDefaultChannels	src/lmic.c	/^static void initDefaultChannels (bit_t join) {$/;"	f	file:	signature:(bit_t join)
initDefaultChannels	src/lmic.c	/^static void initDefaultChannels (void) {$/;"	f	file:	signature:(void)
initJoinLoop	src/lmic.c	/^static void initJoinLoop (void) {$/;"	f	file:	signature:(void)
initfunc	src/main.c	/^static void initfunc (osjob_t* j) {$/;"	f	file:	signature:(osjob_t* j)
initjob	src/main.c	/^	osjob_t initjob;$/;"	l
intvExp	inc/lmic.h	/^    u1_t     intvExp;   \/\/ 0..7$/;"	m	struct:rxsched_t	access:public
intvExp	src/lmic.c	/^    u1_t intvExp = rxsched->intvExp;$/;"	l
isFasterDR	inc/lorabase.h	/^inline int isFasterDR (dr_t dr1, dr_t dr2) { return dr1 > dr2; }$/;"	f	signature:(dr_t dr1, dr_t dr2)
isFasterDR	src/lmic.c	/^extern inline int isFasterDR (dr_t dr1, dr_t dr2);$/;"	p	file:	signature:(dr_t dr1, dr_t dr2)
isSlowerDR	inc/lorabase.h	/^inline int isSlowerDR (dr_t dr1, dr_t dr2) { return dr1 < dr2; }$/;"	f	signature:(dr_t dr1, dr_t dr2)
isSlowerDR	src/lmic.c	/^extern inline int isSlowerDR (dr_t dr1, dr_t dr2);$/;"	p	file:	signature:(dr_t dr1, dr_t dr2)
isTESTMODE	src/lmic.c	59;"	d	file:
j	src/gps.c	/^	uint8_t j = 7;$/;"	l
j	src/onewire.c	/^	uint8_t i = 8, j;$/;"	l
j	src/onewire.c	/^	uint8_t i, j, next_diff;$/;"	l
j	src/oslmic.c	/^        osjob_t* j = NULL;$/;"	l
jacc	src/lmic.c	/^        bit_t jacc = ((LMIC.opmode & (OP_JOINING|OP_REJOIN)) != 0 ? 1 : 0);$/;"	l
jreqDone	src/lmic.c	/^static void jreqDone (xref2osjob_t osjob) {$/;"	f	file:	signature:(xref2osjob_t osjob)
ke	src/aes.c	/^            u4_t *ki, *ke;$/;"	l
key16str	src/gps.c	/^void key16str(char* buff)$/;"	f	signature:(char* buff)
key8str	src/gps.c	/^void key8str(char* buff)$/;"	f	signature:(char* buff)
ki	src/aes.c	/^            u4_t *ki, *ke;$/;"	l
ladrAns	inc/lmic.h	/^    bit_t       ladrAns;      \/\/ link adr adapt answer pending$/;"	m	struct:lmic_t	access:public
lastDriftDiff	inc/lmic.h	/^    s2_t        lastDriftDiff;$/;"	m	struct:lmic_t	access:public
lastchnl	inc/lmic.h	/^    u1_t     lastchnl;  \/\/ last used channel$/;"	m	struct:band_t	access:public
lasttx	src/lmic.c	/^    ostime_t lasttx = LMIC.bcninfo.txtime;   \/\/ save here - decodeBeacon might overwrite$/;"	l
lat	inc/lmic.h	/^    s4_t     lat;     \/\/!< Lat field of last beacon (valid only if BCN_FULL set)$/;"	m	struct:bcninfo_t	access:public
latitude	inc/gps.h	/^	uint8_t latitude[LATITUDE_BUF];$/;"	m	struct:__anon102	access:public
len	src/printf-stdarg.c	/^		register int len = 0;$/;"	l
lmic_t	inc/lmic.h	/^struct lmic_t {$/;"	s
lmic_t::adrAckReq	inc/lmic.h	/^    s1_t        adrAckReq;    \/\/ counter until we reset data rate (0=off)$/;"	m	struct:lmic_t	access:public
lmic_t::adrChanged	inc/lmic.h	/^    u1_t        adrChanged;$/;"	m	struct:lmic_t	access:public
lmic_t::adrEnabled	inc/lmic.h	/^    u1_t        adrEnabled;$/;"	m	struct:lmic_t	access:public
lmic_t::adrTxPow	inc/lmic.h	/^    s1_t        adrTxPow;     \/\/ ADR adjusted TX power$/;"	m	struct:lmic_t	access:public
lmic_t::artKey	inc/lmic.h	/^    u1_t        artKey[16];   \/\/ application router session key$/;"	m	struct:lmic_t	access:public
lmic_t::bands	inc/lmic.h	/^    band_t      bands[MAX_BANDS];$/;"	m	struct:lmic_t	access:public
lmic_t::bcnChnl	inc/lmic.h	/^    u1_t        bcnChnl;$/;"	m	struct:lmic_t	access:public
lmic_t::bcnRxsyms	inc/lmic.h	/^    u1_t        bcnRxsyms;    \/\/ $/;"	m	struct:lmic_t	access:public
lmic_t::bcnRxtime	inc/lmic.h	/^    ostime_t    bcnRxtime;$/;"	m	struct:lmic_t	access:public
lmic_t::bcninfo	inc/lmic.h	/^    bcninfo_t   bcninfo;      \/\/ Last received beacon info$/;"	m	struct:lmic_t	access:public
lmic_t::bcninfoTries	inc/lmic.h	/^    u1_t        bcninfoTries; \/\/ how often to try (scan mode only)$/;"	m	struct:lmic_t	access:public
lmic_t::chRnd	inc/lmic.h	/^    u2_t        chRnd;        \/\/ channel randomizer$/;"	m	struct:lmic_t	access:public
lmic_t::channelDrMap	inc/lmic.h	/^    u2_t        channelDrMap[MAX_CHANNELS];$/;"	m	struct:lmic_t	access:public
lmic_t::channelFreq	inc/lmic.h	/^    u4_t        channelFreq[MAX_CHANNELS];$/;"	m	struct:lmic_t	access:public
lmic_t::channelMap	inc/lmic.h	/^    u2_t        channelMap;$/;"	m	struct:lmic_t	access:public
lmic_t::channelMap	inc/lmic.h	/^    u2_t        channelMap[(72+MAX_XCHANNELS+15)\/16];  \/\/ enabled bits$/;"	m	struct:lmic_t	access:public
lmic_t::dataBeg	inc/lmic.h	/^    u1_t        dataBeg;    \/\/ 0 or start of data (dataBeg-1 is port)$/;"	m	struct:lmic_t	access:public
lmic_t::dataLen	inc/lmic.h	/^    u1_t        dataLen;    \/\/ 0 no data or zero length data, >0 byte count of data$/;"	m	struct:lmic_t	access:public
lmic_t::datarate	inc/lmic.h	/^    u1_t        datarate;     \/\/ current data rate$/;"	m	struct:lmic_t	access:public
lmic_t::devNonce	inc/lmic.h	/^    u2_t        devNonce;     \/\/ last generated nonce$/;"	m	struct:lmic_t	access:public
lmic_t::devaddr	inc/lmic.h	/^    devaddr_t   devaddr;$/;"	m	struct:lmic_t	access:public
lmic_t::devsAns	inc/lmic.h	/^    bit_t       devsAns;      \/\/ device status answer pending$/;"	m	struct:lmic_t	access:public
lmic_t::dn2Ans	inc/lmic.h	/^    u1_t        dn2Ans;       \/\/ 0=no answer pend, 0x80+ACKs$/;"	m	struct:lmic_t	access:public
lmic_t::dn2Dr	inc/lmic.h	/^    u1_t        dn2Dr;$/;"	m	struct:lmic_t	access:public
lmic_t::dn2Freq	inc/lmic.h	/^    u4_t        dn2Freq;$/;"	m	struct:lmic_t	access:public
lmic_t::dnConf	inc/lmic.h	/^    u1_t        dnConf;       \/\/ dn frame confirm pending: LORA::FCT_ACK or 0$/;"	m	struct:lmic_t	access:public
lmic_t::dndr	inc/lmic.h	/^    u1_t        dndr;$/;"	m	struct:lmic_t	access:public
lmic_t::drift	inc/lmic.h	/^    s2_t        drift;        \/\/ last measured drift$/;"	m	struct:lmic_t	access:public
lmic_t::dutyCapAns	inc/lmic.h	/^    bit_t       dutyCapAns;   \/\/ have to ACK duty cycle settings$/;"	m	struct:lmic_t	access:public
lmic_t::errcr	inc/lmic.h	/^    u1_t        errcr;        \/\/ error coding rate (used for TX only)$/;"	m	struct:lmic_t	access:public
lmic_t::frame	inc/lmic.h	/^    u1_t        frame[MAX_LEN_FRAME];$/;"	m	struct:lmic_t	access:public
lmic_t::freq	inc/lmic.h	/^    u4_t        freq;$/;"	m	struct:lmic_t	access:public
lmic_t::globalDutyAvail	inc/lmic.h	/^    ostime_t    globalDutyAvail; \/\/ time device can send again$/;"	m	struct:lmic_t	access:public
lmic_t::globalDutyRate	inc/lmic.h	/^    u1_t        globalDutyRate;  \/\/ max rate: 1\/2^k$/;"	m	struct:lmic_t	access:public
lmic_t::ladrAns	inc/lmic.h	/^    bit_t       ladrAns;      \/\/ link adr adapt answer pending$/;"	m	struct:lmic_t	access:public
lmic_t::lastDriftDiff	inc/lmic.h	/^    s2_t        lastDriftDiff;$/;"	m	struct:lmic_t	access:public
lmic_t::margin	inc/lmic.h	/^    u1_t        margin;$/;"	m	struct:lmic_t	access:public
lmic_t::maxDriftDiff	inc/lmic.h	/^    s2_t        maxDriftDiff;$/;"	m	struct:lmic_t	access:public
lmic_t::missedBcns	inc/lmic.h	/^    u1_t        missedBcns;   \/\/ unable to track last N beacons$/;"	m	struct:lmic_t	access:public
lmic_t::moreData	inc/lmic.h	/^    u1_t        moreData;     \/\/ NWK has more data pending$/;"	m	struct:lmic_t	access:public
lmic_t::netid	inc/lmic.h	/^    u4_t        netid;        \/\/ current network id (~0 - none)$/;"	m	struct:lmic_t	access:public
lmic_t::noRXIQinversion	inc/lmic.h	/^    u1_t        noRXIQinversion;$/;"	m	struct:lmic_t	access:public
lmic_t::nwkKey	inc/lmic.h	/^    u1_t        nwkKey[16];   \/\/ network session key$/;"	m	struct:lmic_t	access:public
lmic_t::opmode	inc/lmic.h	/^    u2_t        opmode;$/;"	m	struct:lmic_t	access:public
lmic_t::osjob	inc/lmic.h	/^    osjob_t     osjob;$/;"	m	struct:lmic_t	access:public
lmic_t::pendTxConf	inc/lmic.h	/^    u1_t        pendTxConf;   \/\/ confirmed data$/;"	m	struct:lmic_t	access:public
lmic_t::pendTxData	inc/lmic.h	/^    u1_t        pendTxData[MAX_LEN_PAYLOAD];$/;"	m	struct:lmic_t	access:public
lmic_t::pendTxLen	inc/lmic.h	/^    u1_t        pendTxLen;    \/\/ +0x80 = confirmed$/;"	m	struct:lmic_t	access:public
lmic_t::pendTxPort	inc/lmic.h	/^    u1_t        pendTxPort;$/;"	m	struct:lmic_t	access:public
lmic_t::ping	inc/lmic.h	/^    rxsched_t   ping;         \/\/ pingable setup$/;"	m	struct:lmic_t	access:public
lmic_t::pingSetAns	inc/lmic.h	/^    u1_t        pingSetAns;   \/\/ answer set cmd and ACK bits$/;"	m	struct:lmic_t	access:public
lmic_t::rejoinCnt	inc/lmic.h	/^    u1_t        rejoinCnt;    \/\/ adjustment for rejoin datarate$/;"	m	struct:lmic_t	access:public
lmic_t::rps	inc/lmic.h	/^    rps_t       rps;$/;"	m	struct:lmic_t	access:public
lmic_t::rssi	inc/lmic.h	/^    s1_t        rssi;$/;"	m	struct:lmic_t	access:public
lmic_t::rxDelay	inc/lmic.h	/^    u1_t        rxDelay;      \/\/ Rx delay after TX$/;"	m	struct:lmic_t	access:public
lmic_t::rxsyms	inc/lmic.h	/^    u1_t        rxsyms;$/;"	m	struct:lmic_t	access:public
lmic_t::rxtime	inc/lmic.h	/^    ostime_t    rxtime;$/;"	m	struct:lmic_t	access:public
lmic_t::seqnoDn	inc/lmic.h	/^    u4_t        seqnoDn;      \/\/ device level down stream seqno$/;"	m	struct:lmic_t	access:public
lmic_t::seqnoUp	inc/lmic.h	/^    u4_t        seqnoUp;$/;"	m	struct:lmic_t	access:public
lmic_t::snchAns	inc/lmic.h	/^    u1_t        snchAns;      \/\/ answer set new channel$/;"	m	struct:lmic_t	access:public
lmic_t::snr	inc/lmic.h	/^    s1_t        snr;$/;"	m	struct:lmic_t	access:public
lmic_t::txChnl	inc/lmic.h	/^    u1_t        txChnl;          \/\/ channel for next TX$/;"	m	struct:lmic_t	access:public
lmic_t::txCnt	inc/lmic.h	/^    u1_t        txCnt;$/;"	m	struct:lmic_t	access:public
lmic_t::txend	inc/lmic.h	/^    ostime_t    txend;$/;"	m	struct:lmic_t	access:public
lmic_t::txpow	inc/lmic.h	/^    s1_t        txpow;     \/\/ dBm$/;"	m	struct:lmic_t	access:public
lmic_t::txrxFlags	inc/lmic.h	/^    u1_t        txrxFlags;  \/\/ transaction flags (TX-RX combo)$/;"	m	struct:lmic_t	access:public
lmic_t::upRepeat	inc/lmic.h	/^    u1_t        upRepeat;     \/\/ configured up repeat$/;"	m	struct:lmic_t	access:public
lmic_t::xchDrMap	inc/lmic.h	/^    u2_t        xchDrMap[MAX_XCHANNELS];   \/\/ extra channel datarate ranges  ---XXX: ditto$/;"	m	struct:lmic_t	access:public
lmic_t::xchFreq	inc/lmic.h	/^    u4_t        xchFreq[MAX_XCHANNELS];    \/\/ extra channel frequencies (if device is behind a repeater)$/;"	m	struct:lmic_t	access:public
lon	inc/lmic.h	/^    s4_t     lon;     \/\/!< Lon field of last beacon (valid only if BCN_FULL set)$/;"	m	struct:bcninfo_t	access:public
longitude	inc/gps.h	/^	uint8_t longitude[LONGITUDE_BUF];$/;"	m	struct:__anon102	access:public
loop_count	src/crc8.c	/^   uint16_t loop_count;$/;"	l
lowerDR	inc/lorabase.h	/^inline dr_t  lowerDR  (dr_t dr, u1_t n) { while(n--){dr=decDR(dr);} return dr; } \/\/ decrease data rate by n steps$/;"	f	signature:(dr_t dr, u1_t n)
lowerDR	src/lmic.c	/^extern inline dr_t  lowerDR  (dr_t dr, u1_t n);$/;"	p	file:	signature:(dr_t dr, u1_t n)
m	src/lmic.c	/^    int m = LMIC.rssi - RSSI_OFF - getSensitivity(LMIC.rps);$/;"	l
main	src/main.c	/^int main(void)$/;"	f	signature:(void)
main	src/printf-stdarg.c	/^int main(void)$/;"	f	signature:(void)
makeRps	inc/lorabase.h	/^inline rps_t makeRps (sf_t sf, bw_t bw, cr_t cr, int ih, int nocrc) {$/;"	f	signature:(sf_t sf, bw_t bw, cr_t cr, int ih, int nocrc)
makeRps	src/lmic.c	/^extern inline rps_t makeRps  (sf_t sf, bw_t bw, cr_t cr, int ih, int nocrc);$/;"	p	file:	signature:(sf_t sf, bw_t bw, cr_t cr, int ih, int nocrc)
map	src/lmic.c	/^        u1_t map = LMIC.channelMap[64\/16]&0xFF;$/;"	l
mapChannels	src/lmic.c	/^static u1_t mapChannels (u1_t chpage, u2_t chmap) {$/;"	f	file:	signature:(u1_t chpage, u2_t chmap)
margin	inc/lmic.h	/^    u1_t        margin;$/;"	m	struct:lmic_t	access:public
maxDriftDiff	inc/lmic.h	/^    s2_t        maxDriftDiff;$/;"	m	struct:lmic_t	access:public
maxFrameLen	src/lmic.c	230;"	d	file:
maxFrameLen	src/lmic.c	253;"	d	file:
maxFrameLens	src/lmic.c	/^const u1_t maxFrameLens [] = { 24,66,142,255,255,255,255,255,  66,142 };$/;"	v
maxFrameLens	src/lmic.c	/^const u1_t maxFrameLens [] = { 64,64,64,123 };$/;"	v
mc1	src/radio.c	/^        u1_t mc1 = (getBw(LMIC.rps)<<6);$/;"	l
mc1	src/radio.c	/^        u1_t mc1 = 0, mc2 = 0, mc3 = 0;$/;"	l
mc2	src/radio.c	/^        u1_t mc1 = 0, mc2 = 0, mc3 = 0;$/;"	l
mc3	src/radio.c	/^        u1_t mc1 = 0, mc2 = 0, mc3 = 0;$/;"	l
meas	src/ds18x20.c	/^	uint16_t meas;$/;"	l
mi	src/printf-stdarg.c	/^	int mi;$/;"	l
mic	src/lmic.c	/^    u4_t mic  = os_rlsbf4(&LMIC.frame[dlen-4]); \/\/ safe before modified by encrypt!$/;"	l
micB0	src/lmic.c	/^static void micB0 (u4_t devaddr, u4_t seqno, int dndir, int len) {$/;"	f	file:	signature:(u4_t devaddr, u4_t seqno, int dndir, int len)
mintime	src/lmic.c	/^        ostime_t mintime = now + \/*10h*\/36000*OSTICKS_PER_SEC;$/;"	l
missedBcns	inc/lmic.h	/^    u1_t        missedBcns;   \/\/ unable to track last N beacons$/;"	m	struct:lmic_t	access:public
mode_work	src/main.c	/^uint8_t mode_work; \/* 0 - ds18b20, 1 - gpstracker *\/$/;"	v
modestr	src/gps.c	/^const char PROGMEM modestr[] = "Mode = ";$/;"	v
moreData	inc/lmic.h	/^    u1_t        moreData;     \/\/ NWK has more data pending$/;"	m	struct:lmic_t	access:public
ms2osticks	inc/oslmic.h	119;"	d
ms2osticksCeil	inc/oslmic.h	126;"	d
ms2osticksRound	inc/oslmic.h	127;"	d
msbf4_read	src/aes.c	196;"	d	file:
msbf4_write	src/aes.c	197;"	d	file:
need_rounding	src/ds18x20.c	/^	uint8_t need_rounding[] = { 1, 3, 4, 6, 9, 11, 12, 14 };$/;"	l
neg	src/printf-stdarg.c	/^	register int t, neg = 0, pc = 0;$/;"	l
netid	inc/lmic.h	/^    u4_t        netid;        \/\/ current network id (~0 - none)$/;"	m	struct:lmic_t	access:public
next	inc/oslmic.h	/^    struct osjob_t* next;$/;"	m	struct:osjob_t	typeref:struct:osjob_t::osjob_t	access:public
nextJoinState	src/lmic.c	/^static ostime_t nextJoinState (void) {$/;"	f	file:	signature:(void)
nextTx	src/lmic.c	/^static ostime_t nextTx (ostime_t now) {$/;"	f	file:	signature:(ostime_t now)
nextTx	src/lmic.c	817;"	d	file:
next_diff	src/onewire.c	/^	uint8_t i, j, next_diff;$/;"	l
noRXIQinversion	inc/lmic.h	/^    u1_t        noRXIQinversion;$/;"	m	struct:lmic_t	access:public
now	src/lmic.c	/^    ostime_t now    = os_getTime();$/;"	l
np	src/printf-stdarg.c	/^	char *np = 0;$/;"	l
num_satelites	inc/gps.h	/^	uint8_t num_satelites[SATELITE_BUF];$/;"	m	struct:__anon102	access:public
nwkKey	inc/lmic.h	/^    u1_t        nwkKey[16];   \/\/ network session key$/;"	m	struct:lmic_t	access:public
nwkskey	src/main.c	/^	uint8_t nwkskey[sizeof(NWKSKEY)];$/;"	l
off	src/lmic.c	/^    ostime_t off = os_rlsbf2(LMIC.frame) & (0x0FFF >> (7 - intvExp)); \/\/ random offset (slot units)$/;"	l
oidx	src/lmic.c	/^    int oidx = 0;$/;"	l
oktet_str	src/gps.c	/^void oktet_str(uint8_t b)$/;"	f	signature:(uint8_t b)
olen	src/lmic.c	/^    int  olen  = fct & FCT_OPTLEN;$/;"	l
onBcnRx	src/lmic.c	/^static void onBcnRx (xref2osjob_t job) {$/;"	f	file:	signature:(xref2osjob_t job)
onEvent	src/main.c	/^void onEvent(ev_t ev)$/;"	f	signature:(ev_t ev)
onJoinFailed	src/lmic.c	/^static void onJoinFailed (xref2osjob_t osjob) {$/;"	f	file:	signature:(xref2osjob_t osjob)
opmode	inc/lmic.h	/^    u2_t        opmode;$/;"	m	struct:lmic_t	access:public
opmode	src/radio.c	/^static void opmode (u1_t mode) {$/;"	f	file:	signature:(u1_t mode)
opmodeFSK	src/radio.c	/^static void opmodeFSK() {$/;"	f	file:
opmodeLora	src/radio.c	/^static void opmodeLora() {$/;"	f	file:
opts	src/lmic.c	/^    xref2u1_t opts = &d[OFF_DAT_OPTS];$/;"	l
os_aes	inc/oslmic.h	/^u4_t os_aes (u1_t mode, xref2u1_t buf, u2_t len);$/;"	p	signature:(u1_t mode, xref2u1_t buf, u2_t len)
os_aes	src/aes.c	/^u4_t os_aes (u1_t mode, xref2u1_t buf, u2_t len) {$/;"	f	signature:(u1_t mode, xref2u1_t buf, u2_t len)
os_clearCallback	inc/oslmic.h	/^void os_clearCallback (xref2osjob_t job);$/;"	p	signature:(xref2osjob_t job)
os_clearCallback	src/oslmic.c	/^void os_clearCallback (osjob_t* job) {$/;"	f	signature:(osjob_t* job)
os_clearMem	inc/oslmic.h	63;"	d
os_copyMem	inc/oslmic.h	64;"	d
os_crc16	inc/oslmic.h	/^u2_t os_crc16 (xref2u1_t d, uint len);$/;"	p	signature:(xref2u1_t d, uint len)
os_crc16	src/lmic.c	/^u2_t os_crc16 (xref2u1_t data, uint len) {$/;"	f	signature:(xref2u1_t data, uint len)
os_getAppsKey	inc/oslmic.h	/^void os_getAppsKey(u1_t* buf);$/;"	p	signature:(u1_t* buf)
os_getAppsKey	src/main.c	/^void os_getAppsKey(u1_t* buf)$/;"	f	signature:(u1_t* buf)
os_getArtEui	inc/oslmic.h	/^void os_getArtEui (xref2u1_t buf);$/;"	p	signature:(xref2u1_t buf)
os_getArtEui	src/main.c	/^void os_getArtEui (u1_t* buf) {$/;"	f	signature:(u1_t* buf)
os_getBattLevel	inc/oslmic.h	/^u1_t os_getBattLevel (void);$/;"	p	signature:(void)
os_getBattLevel	src/lmic.c	/^u1_t os_getBattLevel (void) {$/;"	f	signature:(void)
os_getDevAddr	inc/oslmic.h	/^void os_getDevAddr(u4_t* buf);$/;"	p	signature:(u4_t* buf)
os_getDevAddr	src/main.c	/^void os_getDevAddr(u4_t* buf) {$/;"	f	signature:(u4_t* buf)
os_getDevEui	inc/oslmic.h	/^void os_getDevEui (xref2u1_t buf);$/;"	p	signature:(xref2u1_t buf)
os_getDevEui	src/main.c	/^void os_getDevEui (u1_t* buf) {$/;"	f	signature:(u1_t* buf)
os_getDevKey	inc/oslmic.h	/^void os_getDevKey (xref2u1_t buf);$/;"	p	signature:(xref2u1_t buf)
os_getDevKey	src/main.c	/^void os_getDevKey (u1_t* buf) {$/;"	f	signature:(u1_t* buf)
os_getNwksKey	inc/oslmic.h	/^void os_getNwksKey(u1_t* buf);$/;"	p	signature:(u1_t* buf)
os_getNwksKey	src/main.c	/^void os_getNwksKey(u1_t* buf)$/;"	f	signature:(u1_t* buf)
os_getRndU1	inc/oslmic.h	91;"	d
os_getRndU2	inc/oslmic.h	212;"	d
os_getTime	inc/oslmic.h	/^ostime_t os_getTime (void);$/;"	p	signature:(void)
os_getTime	src/oslmic.c	/^ostime_t os_getTime () {$/;"	f
os_getTimeSecs	inc/oslmic.h	/^uint os_getTimeSecs (void);$/;"	p	signature:(void)
os_init	inc/oslmic.h	/^void os_init (void);$/;"	p	signature:(void)
os_init	src/oslmic.c	/^void os_init () {$/;"	f
os_radio	inc/oslmic.h	/^void os_radio (u1_t mode);$/;"	p	signature:(u1_t mode)
os_radio	src/radio.c	/^void os_radio (u1_t mode) {$/;"	f	signature:(u1_t mode)
os_rlsbf2	inc/oslmic.h	/^u2_t os_rlsbf2 (xref2cu1_t buf);$/;"	p	signature:(xref2cu1_t buf)
os_rlsbf2	src/lmic.c	/^u2_t os_rlsbf2 (xref2cu1_t buf) {$/;"	f	signature:(xref2cu1_t buf)
os_rlsbf4	inc/oslmic.h	/^u4_t os_rlsbf4 (xref2cu1_t buf);$/;"	p	signature:(xref2cu1_t buf)
os_rlsbf4	src/lmic.c	/^u4_t os_rlsbf4 (xref2cu1_t buf) {$/;"	f	signature:(xref2cu1_t buf)
os_rmsbf4	inc/oslmic.h	/^u4_t os_rmsbf4 (xref2cu1_t buf);$/;"	p	signature:(xref2cu1_t buf)
os_rmsbf4	src/lmic.c	/^u4_t os_rmsbf4 (xref2cu1_t buf) {$/;"	f	signature:(xref2cu1_t buf)
os_runloop	inc/oslmic.h	/^void os_runloop (void);$/;"	p	signature:(void)
os_runloop	src/oslmic.c	/^void os_runloop () {$/;"	f
os_setCallback	inc/oslmic.h	/^void os_setCallback (xref2osjob_t job, osjobcb_t cb);$/;"	p	signature:(xref2osjob_t job, osjobcb_t cb)
os_setCallback	src/oslmic.c	/^void os_setCallback (osjob_t* job, osjobcb_t cb) {$/;"	f	signature:(osjob_t* job, osjobcb_t cb)
os_setTimedCallback	inc/oslmic.h	/^void os_setTimedCallback (xref2osjob_t job, ostime_t time, osjobcb_t cb);$/;"	p	signature:(xref2osjob_t job, ostime_t time, osjobcb_t cb)
os_setTimedCallback	src/oslmic.c	/^void os_setTimedCallback (osjob_t* job, ostime_t time, osjobcb_t cb) {$/;"	f	signature:(osjob_t* job, ostime_t time, osjobcb_t cb)
os_wlsbf2	inc/oslmic.h	/^void os_wlsbf2 (xref2u1_t buf, u2_t value);$/;"	p	signature:(xref2u1_t buf, u2_t value)
os_wlsbf2	src/lmic.c	/^void os_wlsbf2 (xref2u1_t buf, u2_t v) {$/;"	f	signature:(xref2u1_t buf, u2_t v)
os_wlsbf4	inc/oslmic.h	/^void os_wlsbf4 (xref2u1_t buf, u4_t value);$/;"	p	signature:(xref2u1_t buf, u4_t value)
os_wlsbf4	src/lmic.c	/^void os_wlsbf4 (xref2u1_t buf, u4_t v) {$/;"	f	signature:(xref2u1_t buf, u4_t v)
os_wmsbf4	inc/oslmic.h	/^void os_wmsbf4 (xref2u1_t buf, u4_t value);$/;"	p	signature:(xref2u1_t buf, u4_t value)
os_wmsbf4	src/lmic.c	/^void os_wmsbf4 (xref2u1_t buf, u4_t v) {$/;"	f	signature:(xref2u1_t buf, u4_t v)
osjob	inc/lmic.h	/^    osjob_t     osjob;$/;"	m	struct:lmic_t	access:public
osjob_t	inc/oslmic.h	/^struct osjob_t {$/;"	s
osjob_t	inc/oslmic.h	/^typedef     struct osjob_t osjob_t;$/;"	t	typeref:struct:osjob_t
osjob_t::deadline	inc/oslmic.h	/^    ostime_t deadline;$/;"	m	struct:osjob_t	access:public
osjob_t::func	inc/oslmic.h	/^    osjobcb_t  func;$/;"	m	struct:osjob_t	access:public
osjob_t::next	inc/oslmic.h	/^    struct osjob_t* next;$/;"	m	struct:osjob_t	typeref:struct:osjob_t::osjob_t	access:public
osjobcb_t	inc/oslmic.h	/^typedef void (*osjobcb_t) (struct osjob_t*);$/;"	t
osticks2ms	inc/oslmic.h	121;"	d
osticks2us	inc/oslmic.h	122;"	d
ostime_t	inc/oslmic.h	/^typedef              s4_t  ostime_t;$/;"	t
ow_bit_io	inc/onewire.h	/^uint8_t ow_bit_io( uint8_t b );$/;"	p	signature:( uint8_t b )
ow_bit_io	src/onewire.c	/^uint8_t ow_bit_io(uint8_t b) {$/;"	f	signature:(uint8_t b)
ow_byte_rd	inc/onewire.h	/^uint8_t ow_byte_rd( void );$/;"	p	signature:( void )
ow_byte_rd	src/onewire.c	/^uint8_t ow_byte_rd(void) { \/\/ read by sending 0xff (a dontcare?)$/;"	f	signature:(void)
ow_byte_wr	inc/onewire.h	/^uint8_t ow_byte_wr( uint8_t b );$/;"	p	signature:( uint8_t b )
ow_byte_wr	src/onewire.c	/^uint8_t ow_byte_wr(uint8_t b) {$/;"	f	signature:(uint8_t b)
ow_command	inc/onewire.h	/^void ow_command( uint8_t command, uint8_t *id );$/;"	p	signature:( uint8_t command, uint8_t *id )
ow_command	src/onewire.c	/^void ow_command(uint8_t command, uint8_t *id) {$/;"	f	signature:(uint8_t command, uint8_t *id)
ow_init	inc/onewire.h	/^void ow_init(void);$/;"	p	signature:(void)
ow_init	src/onewire.c	/^void ow_init(void){$/;"	f	signature:(void)
ow_input_pin_state	inc/onewire.h	/^uint8_t ow_input_pin_state(void);$/;"	p	signature:(void)
ow_input_pin_state	src/onewire.c	/^uint8_t ow_input_pin_state() {$/;"	f
ow_parasite_disable	inc/onewire.h	/^void ow_parasite_disable(void);$/;"	p	signature:(void)
ow_parasite_disable	src/onewire.c	/^void ow_parasite_disable(void) {$/;"	f	signature:(void)
ow_parasite_enable	inc/onewire.h	/^void ow_parasite_enable(void);$/;"	p	signature:(void)
ow_parasite_enable	src/onewire.c	/^void ow_parasite_enable(void) {$/;"	f	signature:(void)
ow_reset	inc/onewire.h	/^uint8_t ow_reset(void);$/;"	p	signature:(void)
ow_reset	src/onewire.c	/^uint8_t ow_reset(void) {$/;"	f	signature:(void)
ow_rom_search	inc/onewire.h	/^uint8_t ow_rom_search( uint8_t diff, uint8_t *id );$/;"	p	signature:( uint8_t diff, uint8_t *id )
ow_rom_search	src/onewire.c	/^uint8_t ow_rom_search(uint8_t diff, uint8_t *id) {$/;"	f	signature:(uint8_t diff, uint8_t *id)
p	src/radio.c	/^    u1_t p = readReg(LORARegFifoAddrPtr);$/;"	l
p1	src/lmic.c	/^            u1_t p1     = opts[oidx+1];            \/\/ txpow + DR$/;"	l
pad	src/printf-stdarg.c	/^	register int width, pad;$/;"	l
padchar	src/printf-stdarg.c	/^	register int pc = 0, padchar = ' ';$/;"	l
pc	src/printf-stdarg.c	/^	register int pc = 0, padchar = ' ';$/;"	l
pc	src/printf-stdarg.c	/^	register int pc = 0;$/;"	l
pc	src/printf-stdarg.c	/^	register int t, neg = 0, pc = 0;$/;"	l
pend	src/lmic.c	/^    int  pend  = dlen-4;  \/\/ MIC$/;"	l
pendTxConf	inc/lmic.h	/^    u1_t        pendTxConf;   \/\/ confirmed data$/;"	m	struct:lmic_t	access:public
pendTxData	inc/lmic.h	/^    u1_t        pendTxData[MAX_LEN_PAYLOAD];$/;"	m	struct:lmic_t	access:public
pendTxLen	inc/lmic.h	/^    u1_t        pendTxLen;    \/\/ +0x80 = confirmed$/;"	m	struct:lmic_t	access:public
pendTxPort	inc/lmic.h	/^    u1_t        pendTxPort;$/;"	m	struct:lmic_t	access:public
ping	inc/lmic.h	/^    rxsched_t   ping;         \/\/ pingable setup$/;"	m	struct:lmic_t	access:public
pingSetAns	inc/lmic.h	/^    u1_t        pingSetAns;   \/\/ answer set cmd and ACK bits$/;"	m	struct:lmic_t	access:public
pnext	src/oslmic.c	/^    osjob_t** pnext;$/;"	l
poff	src/lmic.c	/^    int  poff  = OFF_DAT_OPTS+olen;$/;"	l
polynomial	src/lmic.c	/^    u2_t polynomial = 0x1021;$/;"	l
port	src/lmic.c	/^    int port = -1;$/;"	l
pow2dBm	inc/lorabase.h	/^s1_t pow2dBm (u1_t mcmd_ladr_p1);$/;"	p	signature:(u1_t mcmd_ladr_p1)
pow2dBm	src/lmic.c	249;"	d	file:
pow2dBm	src/lmic.c	275;"	d	file:
print	src/printf-stdarg.c	/^static int print( char **out, const char *format, va_list args )$/;"	f	file:	signature:( char **out, const char *format, va_list args )
print_buf	src/printf-stdarg.c	/^	char print_buf[PRINT_BUF_LEN];$/;"	l
print_value	src/gps.c	/^void print_value (char *id, int value) {$/;"	f	signature:(char *id, int value)
printchar	src/printf-stdarg.c	/^static void printchar(char **str, int c)$/;"	f	file:	signature:(char **str, int c)
printf	inc/printf-stdarg.h	/^int printf(const char *format, ...);$/;"	p	signature:(const char *format, ...)
printf	src/printf-stdarg.c	/^int printf(const char *format, ...)$/;"	f	signature:(const char *format, ...)
printi	src/printf-stdarg.c	/^static int printi(char **out, int i, int b, int sg, int width, int pad, int letbase)$/;"	f	file:	signature:(char **out, int i, int b, int sg, int width, int pad, int letbase)
prints	src/printf-stdarg.c	/^static int prints(char **out, const char *string, int width, int pad)$/;"	f	file:	signature:(char **out, const char *string, int width, int pad)
processBeacon	src/lmic.c	/^static void processBeacon (xref2osjob_t osjob) {$/;"	f	file:	signature:(xref2osjob_t osjob)
processDnData	src/lmic.c	/^static bit_t processDnData (void) {$/;"	f	file:	signature:(void)
processDnData	src/lmic.c	/^static bit_t processDnData(void);$/;"	p	file:	signature:(void)
processJoinAccept	src/lmic.c	/^static bit_t processJoinAccept (void) {$/;"	f	file:	signature:(void)
processPingRx	src/lmic.c	/^static void processPingRx (xref2osjob_t osjob) {$/;"	f	file:	signature:(xref2osjob_t osjob)
processRx1DnData	src/lmic.c	/^static void processRx1DnData (xref2osjob_t osjob) {$/;"	f	file:	signature:(xref2osjob_t osjob)
processRx1Jacc	src/lmic.c	/^static void processRx1Jacc (xref2osjob_t osjob) {$/;"	f	file:	signature:(xref2osjob_t osjob)
processRx2DnData	src/lmic.c	/^static void processRx2DnData (xref2osjob_t osjob) {$/;"	f	file:	signature:(xref2osjob_t osjob)
processRx2DnDataDelay	src/lmic.c	/^static void processRx2DnDataDelay (xref2osjob_t osjob) {$/;"	f	file:	signature:(xref2osjob_t osjob)
processRx2Jacc	src/lmic.c	/^static void processRx2Jacc (xref2osjob_t osjob) {$/;"	f	file:	signature:(xref2osjob_t osjob)
process_command	src/gps.c	/^static void process_command(void)$/;"	f	file:	signature:(void)
process_data	src/gps.c	/^osjob_t process_data;$/;"	v
process_uart	inc/gps.h	/^void process_uart(osjob_t* j);$/;"	p	signature:(osjob_t* j)
process_uart	src/gps.c	/^void process_uart(osjob_t* j)$/;"	f	signature:(osjob_t* j)
ptr	src/printf-stdarg.c	/^		register const char *ptr;$/;"	l
ptr	src/printf-stdarg.c	/^	char *ptr = "Hello world!";$/;"	l
putchar	src/printf-stdarg.c	29;"	d	file:
pw	src/radio.c	/^    s1_t pw = (s1_t)LMIC.txpow;$/;"	l
q	src/lmic.c	/^    u1_t q = sfx - (sf >= SF11 ? 8 : 0);$/;"	l
quality	inc/gps.h	/^	uint8_t quality;$/;"	m	struct:__anon102	access:public
r	src/lmic.c	/^    u2_t r = os_getRndU2();$/;"	l
r	src/radio.c	/^    u1_t r = readReg(LORARegRssiValue);$/;"	l
radio_init	inc/oslmic.h	/^void radio_init (void);$/;"	p	signature:(void)
radio_init	src/radio.c	/^void radio_init () {$/;"	f
radio_irq_handler	inc/oslmic.h	/^void radio_irq_handler (u1_t dio);$/;"	p	signature:(u1_t dio)
radio_irq_handler	src/hal.c	/^extern void radio_irq_handler(u1_t dio);$/;"	p	file:	signature:(u1_t dio)
radio_irq_handler	src/radio.c	/^void radio_irq_handler (u1_t dio) {$/;"	f	signature:(u1_t dio)
radio_rand1	inc/oslmic.h	/^u1_t radio_rand1 (void);$/;"	p	signature:(void)
radio_rand1	src/radio.c	/^u1_t radio_rand1 () {$/;"	f
radio_rssi	src/radio.c	/^u1_t radio_rssi () {$/;"	f
randbuf	src/radio.c	/^static u1_t randbuf[16];$/;"	v	file:
readBuf	src/radio.c	/^static void readBuf (u1_t addr, xref2u1_t buf, u1_t len) {$/;"	f	file:	signature:(u1_t addr, xref2u1_t buf, u1_t len)
readReg	src/radio.c	/^static u1_t readReg (u1_t addr) {$/;"	f	file:	signature:(u1_t addr)
rejoinCnt	inc/lmic.h	/^    u1_t        rejoinCnt;    \/\/ adjustment for rejoin datarate$/;"	m	struct:lmic_t	access:public
remainder	src/lmic.c	/^    u2_t remainder = 0;$/;"	l
replayConf	src/lmic.c	/^    int replayConf = 0;$/;"	l
reportEvent	src/lmic.c	/^static void reportEvent (ev_t ev) {$/;"	f	file:	signature:(ev_t ev)
reportfunc	inc/main.h	/^static void reportfunc (osjob_t* j);$/;"	p	signature:(osjob_t* j)
reportfunc	src/main.c	/^static void reportfunc(osjob_t* j)$/;"	f	file:	signature:(osjob_t* j)
reportjob	src/main.c	/^static osjob_t reportjob;$/;"	v	file:
reporttemp	src/main.c	/^static void reporttemp (osjob_t* j) {$/;"	f	file:	signature:(osjob_t* j)
reporttemp	src/main.c	/^static void reporttemp (osjob_t* j);$/;"	p	file:	signature:(osjob_t* j)
res	src/main.c	/^	uint32_t res;$/;"	l
ret	src/hal.c	/^	u1_t ret;$/;"	l
rndDelay	src/lmic.c	/^static ostime_t rndDelay (u1_t secSpan) {$/;"	f	file:	signature:(u1_t secSpan)
rps	inc/lmic.h	/^    rps_t       rps;$/;"	m	struct:lmic_t	access:public
rps_t	inc/lorabase.h	/^typedef u2_t rps_t;$/;"	t
rssi	inc/lmic.h	/^    s1_t        rssi;$/;"	m	struct:lmic_t	access:public
rssi	inc/lmic.h	/^    s1_t     rssi;    \/\/!< Adjusted RSSI value of last received beacon$/;"	m	struct:bcninfo_t	access:public
runEngineUpdate	src/lmic.c	/^static void runEngineUpdate (xref2osjob_t osjob) {$/;"	f	file:	signature:(xref2osjob_t osjob)
runReset	src/lmic.c	/^static void runReset (xref2osjob_t osjob) {$/;"	f	file:	signature:(xref2osjob_t osjob)
runnablejobs	src/oslmic.c	/^    osjob_t* runnablejobs;$/;"	m	struct:__anon1	file:	access:public
rxDelay	inc/lmic.h	/^    u1_t        rxDelay;      \/\/ Rx delay after TX$/;"	m	struct:lmic_t	access:public
rx_countbuffer	src/gps.c	/^static volatile uint8_t rx_countbuffer;$/;"	v	file:
rx_headbuffer	src/gps.c	/^static volatile uint8_t rx_headbuffer;$/;"	v	file:
rx_tailbuffer	src/gps.c	/^static volatile uint8_t rx_tailbuffer;$/;"	v	file:
rxbase	inc/lmic.h	/^    ostime_t rxbase;$/;"	m	struct:rxsched_t	access:public
rxfsk	src/radio.c	/^static void rxfsk (u1_t rxmode) {$/;"	f	file:	signature:(u1_t rxmode)
rxlora	src/radio.c	/^static void rxlora (u1_t rxmode) {$/;"	f	file:	signature:(u1_t rxmode)
rxlorairqmask	src/radio.c	/^static const u1_t rxlorairqmask[] = {$/;"	v	file:
rxoff	src/lmic.c	/^    ostime_t rxoff, err;$/;"	l
rxschedInit	src/lmic.c	/^static void rxschedInit (xref2rxsched_t rxsched) {$/;"	f	file:	signature:(xref2rxsched_t rxsched)
rxschedNext	src/lmic.c	/^static bit_t rxschedNext (xref2rxsched_t rxsched, ostime_t cando) {$/;"	f	file:	signature:(xref2rxsched_t rxsched, ostime_t cando)
rxsched_t	inc/lmic.h	/^struct rxsched_t {$/;"	s
rxsched_t	inc/oslmic.h	/^typedef   struct rxsched_t rxsched_t;$/;"	t	typeref:struct:rxsched_t
rxsched_t::dr	inc/lmic.h	/^    u1_t     dr;$/;"	m	struct:rxsched_t	access:public
rxsched_t::freq	inc/lmic.h	/^    u4_t     freq;$/;"	m	struct:rxsched_t	access:public
rxsched_t::intvExp	inc/lmic.h	/^    u1_t     intvExp;   \/\/ 0..7$/;"	m	struct:rxsched_t	access:public
rxsched_t::rxbase	inc/lmic.h	/^    ostime_t rxbase;$/;"	m	struct:rxsched_t	access:public
rxsched_t::rxsyms	inc/lmic.h	/^    u1_t     rxsyms;$/;"	m	struct:rxsched_t	access:public
rxsched_t::rxtime	inc/lmic.h	/^    ostime_t rxtime;    \/\/ start of next spot$/;"	m	struct:rxsched_t	access:public
rxsched_t::slot	inc/lmic.h	/^    u1_t     slot;      \/\/ runs from 0 to 128$/;"	m	struct:rxsched_t	access:public
rxsyms	inc/lmic.h	/^    u1_t        rxsyms;$/;"	m	struct:lmic_t	access:public
rxsyms	inc/lmic.h	/^    u1_t     rxsyms;$/;"	m	struct:rxsched_t	access:public
rxsyms	src/lmic.c	/^    u1_t rxsyms = MINRX_SYMS;$/;"	l
rxtime	inc/lmic.h	/^    ostime_t    rxtime;$/;"	m	struct:lmic_t	access:public
rxtime	inc/lmic.h	/^    ostime_t rxtime;    \/\/ start of next spot$/;"	m	struct:rxsched_t	access:public
rxtime	src/lmic.c	/^    ostime_t rxtime = 0;$/;"	l
s	src/printf-stdarg.c	/^				register char *s = (char *)va_arg( args, int );$/;"	l
s	src/printf-stdarg.c	/^	register char *s;$/;"	l
s	src/radio.c	/^    u1_t s = readReg(RegOpMode);$/;"	l
s1_t	inc/oslmic.h	/^typedef int8_t             s1_t;$/;"	t
s2_t	inc/oslmic.h	/^typedef int16_t            s2_t;$/;"	t
s4_t	inc/oslmic.h	/^typedef int32_t            s4_t;$/;"	t
s_pos	src/gps.c	/^	uint8_t s_pos = start_pos;$/;"	l
sameSfBw	inc/lorabase.h	/^inline int sameSfBw(rps_t r1, rps_t r2) { return ((r1^r2)&0x1F) == 0; }$/;"	f	signature:(rps_t r1, rps_t r2)
sameSfBw	src/lmic.c	/^extern inline int   sameSfBw (rps_t r1, rps_t r2);$/;"	p	file:	signature:(rps_t r1, rps_t r2)
schedRx2	src/lmic.c	/^static void schedRx2 (ostime_t delay, osjobcb_t func) {$/;"	f	file:	signature:(ostime_t delay, osjobcb_t func)
scheduledjobs	src/oslmic.c	/^    osjob_t* scheduledjobs;$/;"	m	struct:__anon1	file:	access:public
scr	src/printf-stdarg.c	/^	char scr[2];$/;"	l
search_sep	src/gps.c	/^static uint8_t search_sep(uint8_t sep, uint8_t* buf, uint8_t size_buf, uint8_t start_pos)$/;"	f	file:	signature:(uint8_t sep, uint8_t* buf, uint8_t size_buf, uint8_t start_pos)
sec2osticks	inc/oslmic.h	120;"	d
sec2osticks	src/lmic.c	/^        schedRx2(sec2osticks(LMIC.rxDelay + (int)DELAY_EXTDNW2), FUNC_ADDR(setupRx2DnData));$/;"	p	file:	signature:(LMIC.rxDelay + (int)DELAY_EXTDNW2)
sec2osticks	src/lmic.c	/^    txDone(sec2osticks(LMIC.rxDelay), FUNC_ADDR(setupRx1DnData));$/;"	p	file:	signature:(LMIC.rxDelay)
sep	src/gps.c	/^	uint8_t sep = ',';$/;"	l
seqno	src/lmic.c	/^    u4_t seqno = os_rlsbf2(&d[OFF_DAT_SEQNO]);$/;"	l
seqnoDn	inc/lmic.h	/^    u4_t        seqnoDn;      \/\/ device level down stream seqno$/;"	m	struct:lmic_t	access:public
seqnoUp	inc/lmic.h	/^    u4_t        seqnoUp;$/;"	m	struct:lmic_t	access:public
setBcnRxParams	src/lmic.c	/^static void setBcnRxParams (void) {$/;"	f	file:	signature:(void)
setBw	inc/lorabase.h	/^inline rps_t setBw   (rps_t params, bw_t cr)   { return (rps_t)((params & ~0x18) | (cr<<3)); }$/;"	f	signature:(rps_t params, bw_t cr)
setBw	src/lmic.c	/^extern inline rps_t setBw    (rps_t params, bw_t cr);$/;"	p	file:	signature:(rps_t params, bw_t cr)
setCr	inc/lorabase.h	/^inline rps_t setCr   (rps_t params, cr_t cr)   { return (rps_t)((params & ~0x60) | (cr<<5)); }$/;"	f	signature:(rps_t params, cr_t cr)
setCr	src/lmic.c	/^extern inline rps_t setCr    (rps_t params, cr_t cr);$/;"	p	file:	signature:(rps_t params, cr_t cr)
setDrJoin	src/lmic.c	/^static void setDrJoin (u1_t reason, u1_t dr) {$/;"	f	file:	signature:(u1_t reason, u1_t dr)
setDrTxpow	src/lmic.c	/^static void setDrTxpow (u1_t reason, u1_t dr, s1_t pow) {$/;"	f	file:	signature:(u1_t reason, u1_t dr, s1_t pow)
setIh	inc/lorabase.h	/^inline rps_t setIh   (rps_t params, int ih)    { return (rps_t)((params & ~0xFF00) | (ih<<8)); }$/;"	f	signature:(rps_t params, int ih)
setIh	src/lmic.c	/^extern inline rps_t setIh    (rps_t params, int ih);$/;"	p	file:	signature:(rps_t params, int ih)
setNocrc	inc/lorabase.h	/^inline rps_t setNocrc(rps_t params, int nocrc) { return (rps_t)((params & ~0x80) | (nocrc<<7)); }$/;"	f	signature:(rps_t params, int nocrc)
setNocrc	src/lmic.c	/^extern inline rps_t setNocrc (rps_t params, int nocrc);$/;"	p	file:	signature:(rps_t params, int nocrc)
setRx1Params	src/lmic.c	693;"	d	file:
setRx1Params	src/lmic.c	847;"	d	file:
setSf	inc/lorabase.h	/^inline rps_t setSf   (rps_t params, sf_t sf)   { return (rps_t)((params & ~0x7) | sf); }$/;"	f	signature:(rps_t params, sf_t sf)
setSf	src/lmic.c	/^extern inline rps_t setSf    (rps_t params, sf_t sf);$/;"	p	file:	signature:(rps_t params, sf_t sf)
setupRx1	src/lmic.c	/^static void setupRx1 (osjobcb_t func) {$/;"	f	file:	signature:(osjobcb_t func)
setupRx1DnData	src/lmic.c	/^static void setupRx1DnData (xref2osjob_t osjob) {$/;"	f	file:	signature:(xref2osjob_t osjob)
setupRx1Jacc	src/lmic.c	/^static void setupRx1Jacc (xref2osjob_t osjob) {$/;"	f	file:	signature:(xref2osjob_t osjob)
setupRx2	src/lmic.c	/^static void setupRx2 (void) {$/;"	f	file:	signature:(void)
setupRx2DnData	src/lmic.c	/^static void setupRx2DnData (xref2osjob_t osjob) {$/;"	f	file:	signature:(xref2osjob_t osjob)
setupRx2Jacc	src/lmic.c	/^static void setupRx2Jacc (xref2osjob_t osjob) {$/;"	f	file:	signature:(xref2osjob_t osjob)
sf	src/lmic.c	/^    u1_t sf = getSf(rps);  \/\/ 0=FSK, 1..6 = SF7..12$/;"	l
sf	src/radio.c	/^    sf_t sf = getSf(LMIC.rps);$/;"	l
sf_t	inc/lorabase.h	/^typedef u1_t sf_t;$/;"	t
sfx	src/lmic.c	/^    u1_t sfx = 4*(sf+(7-SF7));$/;"	l
slot	inc/lmic.h	/^    u1_t     slot;      \/\/ runs from 0 to 128$/;"	m	struct:rxsched_t	access:public
snchAns	inc/lmic.h	/^    u1_t        snchAns;      \/\/ answer set new channel$/;"	m	struct:lmic_t	access:public
snprintf	inc/printf-stdarg.h	/^int snprintf( char *buf, unsigned int count, const char *format, ... );$/;"	p	signature:( char *buf, unsigned int count, const char *format, ... )
snprintf	src/printf-stdarg.c	/^int snprintf( char *buf, unsigned int count, const char *format, ... )$/;"	f	signature:( char *buf, unsigned int count, const char *format, ... )
snr	inc/lmic.h	/^    s1_t        snr;$/;"	m	struct:lmic_t	access:public
snr	inc/lmic.h	/^    s1_t     snr;     \/\/!< Scaled SNR value of last received beacon$/;"	m	struct:bcninfo_t	access:public
sp	src/ds18x20.c	/^	uint8_t sp[DS18X20_SP_SIZE];$/;"	l
spi_init	inc/hal.h	/^void spi_init(void);$/;"	p	signature:(void)
spi_init	src/hal.c	/^void spi_init(void)$/;"	f	signature:(void)
sprintf	inc/printf-stdarg.h	/^int sprintf(char *out, const char *format, ...);$/;"	p	signature:(char *out, const char *format, ...)
sprintf	src/printf-stdarg.c	/^int sprintf(char *out, const char *format, ...)$/;"	f	signature:(char *out, const char *format, ...)
startJoining	src/lmic.c	/^static void startJoining (xref2osjob_t osjob) {$/;"	f	file:	signature:(xref2osjob_t osjob)
startRxBcn	src/lmic.c	/^static void startRxBcn (xref2osjob_t osjob) {$/;"	f	file:	signature:(xref2osjob_t osjob)
startRxPing	src/lmic.c	/^static void startRxPing (xref2osjob_t osjob) {$/;"	f	file:	signature:(xref2osjob_t osjob)
startScan	src/lmic.c	/^static void startScan (void) {$/;"	f	file:	signature:(void)
startScan	src/lmic.c	/^static void startScan (void);$/;"	p	file:	signature:(void)
startmeasure	src/main.c	/^static void  startmeasure(osjob_t* j)$/;"	f	file:	signature:(osjob_t* j)
startmeasurejob	src/main.c	/^static osjob_t startmeasurejob;$/;"	v	file:
startrx	src/radio.c	/^static void startrx (u1_t rxmode) {$/;"	f	file:	signature:(u1_t rxmode)
starttx	src/radio.c	/^static void starttx () {$/;"	f	file:
stateJustJoined	src/lmic.c	/^static void stateJustJoined (void) {$/;"	f	file:	signature:(void)
str_t	inc/oslmic.h	/^typedef const char*        str_t;$/;"	t
strn_cmp	src/gps.c	/^uint8_t strn_cmp(char* s1, char* s2, uint8_t len)$/;"	f	signature:(char* s1, char* s2, uint8_t len)
su	src/lmic.c	/^    u1_t su = join ? 0 : NUM_DEFAULT_CHANNELS;$/;"	l
subzero	src/ds18x20.c	/^	uint8_t subzero = res_meas[0];$/;"	l
subzero	src/ds18x20.c	/^	uint8_t subzero, cel, cel_frac_bits;$/;"	l
subzero	src/main.c	/^	u1_t subzero;$/;"	l
swapmsbf	src/aes.c	198;"	d	file:
t	src/hal.c	/^	u4_t t = hal_time;$/;"	l
t	src/hal.c	/^    u4_t t = hal_ticks();$/;"	l
t	src/printf-stdarg.c	/^	register int t, neg = 0, pc = 0;$/;"	l
t0	src/aes.c	/^            u4_t t0, t1, t2, t3;$/;"	l
t1	src/aes.c	/^            u4_t t0, t1, t2, t3;$/;"	l
t2	src/aes.c	/^            u4_t t0, t1, t2, t3;$/;"	l
t3	src/aes.c	/^            u4_t t0, t1, t2, t3;$/;"	l
table_get_ostime	inc/oslmic.h	/^    static inline ostime_t table_get_ostime(const ostime_t *table, size_t index) { return table[index]; }$/;"	f	signature:(const ostime_t *table, size_t index)
table_get_s1	inc/oslmic.h	/^    static inline s1_t table_get_s1(const s1_t *table, size_t index) { return table[index]; }$/;"	f	signature:(const s1_t *table, size_t index)
table_get_s2	inc/oslmic.h	/^    static inline s2_t table_get_s2(const s2_t *table, size_t index) { return table[index]; }$/;"	f	signature:(const s2_t *table, size_t index)
table_get_s4	inc/oslmic.h	/^    static inline s4_t table_get_s4(const s4_t *table, size_t index) { return table[index]; }$/;"	f	signature:(const s4_t *table, size_t index)
table_get_u1	inc/oslmic.h	/^    static inline u1_t table_get_u1(const u1_t *table, size_t index) { return table[index]; }$/;"	f	signature:(const u1_t *table, size_t index)
table_get_u2	inc/oslmic.h	/^    static inline u2_t table_get_u2(const u2_t *table, size_t index) { return table[index]; }$/;"	f	signature:(const u2_t *table, size_t index)
table_get_u4	inc/oslmic.h	/^    static inline u4_t table_get_u4(const u4_t *table, size_t index) { return table[index]; }$/;"	f	signature:(const u4_t *table, size_t index)
tikfunc	src/main.c	/^static void tikfunc(osjob_t* j)$/;"	f	file:	signature:(osjob_t* j)
tikjob	src/main.c	/^static osjob_t tikjob;$/;"	v	file:
time	inc/gps.h	/^	uint8_t time[TIME_BUF];$/;"	m	struct:__anon102	access:public
time	inc/lmic.h	/^    u4_t     time;    \/\/!< GPS time in seconds of last beacon (received or surrogate)$/;"	m	struct:bcninfo_t	access:public
time	src/lmic.c	/^    ostime_t time = os_getTime();$/;"	l
tmp	src/lmic.c	/^    int tmp = 8*plen - sfx + 28 + (getNocrc(rps)?0:16) - (getIh(rps)?20:0);$/;"	l
txChnl	inc/lmic.h	/^    u1_t        txChnl;          \/\/ channel for next TX$/;"	m	struct:lmic_t	access:public
txCnt	inc/lmic.h	/^    u1_t        txCnt;$/;"	m	struct:lmic_t	access:public
txDelay	src/lmic.c	/^static void txDelay (ostime_t reftime, u1_t secSpan) {$/;"	f	file:	signature:(ostime_t reftime, u1_t secSpan)
txDone	src/lmic.c	/^static void txDone (ostime_t delay, osjobcb_t func) {$/;"	f	file:	signature:(ostime_t delay, osjobcb_t func)
tx_countbuffer	src/hal.c	/^static volatile uint8_t tx_countbuffer;$/;"	v	file:
tx_headbuffer	src/hal.c	/^static volatile uint8_t tx_headbuffer;$/;"	v	file:
tx_tailbuffer	src/hal.c	/^static volatile uint8_t tx_tailbuffer;$/;"	v	file:
txbeg	src/lmic.c	/^    ostime_t txbeg  = 0;$/;"	l
txcap	inc/lmic.h	/^    u2_t     txcap;     \/\/ duty cycle limitation: 1\/txcap$/;"	m	struct:band_t	access:public
txdata	src/lmic.c	/^    bit_t txdata = ((LMIC.opmode & (OP_TXDATA|OP_POLL)) != OP_POLL);$/;"	l
txdr	src/lmic.c	/^            dr_t txdr = (dr_t)LMIC.datarate;$/;"	l
txend	inc/lmic.h	/^    ostime_t    txend;$/;"	m	struct:lmic_t	access:public
txfsk	src/radio.c	/^static void txfsk () {$/;"	f	file:
txlora	src/radio.c	/^static void txlora () {$/;"	f	file:
txpow	inc/lmic.h	/^    s1_t        txpow;     \/\/ dBm$/;"	m	struct:lmic_t	access:public
txpow	inc/lmic.h	/^    s1_t     txpow;     \/\/ maximum TX power$/;"	m	struct:band_t	access:public
txrxFlags	inc/lmic.h	/^    u1_t        txrxFlags;  \/\/ transaction flags (TX-RX combo)$/;"	m	struct:lmic_t	access:public
txtime	inc/lmic.h	/^    ostime_t txtime;  \/\/!< Time when the beacon was sent$/;"	m	struct:bcninfo_t	access:public
u	src/printf-stdarg.c	/^	register unsigned int u = i;$/;"	l
u	src/radio.c	/^    u1_t u = 0;$/;"	l
u	src/radio.c	/^    u1_t u = OPMODE_LORA;$/;"	l
u1	src/aes.c	200;"	d	file:
u1_t	inc/oslmic.h	/^typedef uint8_t            u1_t;$/;"	t
u1str	src/gps.c	/^void u1str(uint8_t b)$/;"	f	signature:(uint8_t b)
u2_t	inc/oslmic.h	/^typedef uint16_t           u2_t;$/;"	t
u4_t	inc/oslmic.h	/^typedef uint32_t           u4_t;$/;"	t
u4t_str	src/gps.c	/^void u4t_str(u4_t b)$/;"	f	signature:(u4_t b)
uart_ok	src/gps.c	/^void uart_ok() {$/;"	f
uint	inc/oslmic.h	/^typedef unsigned int       uint;$/;"	t
unlinkjob	src/oslmic.c	/^static int unlinkjob (osjob_t** pnext, osjob_t* job) {$/;"	f	file:	signature:(osjob_t** pnext, osjob_t* job)
upRepeat	inc/lmic.h	/^    u1_t        upRepeat;     \/\/ configured up repeat$/;"	m	struct:lmic_t	access:public
updataDone	src/lmic.c	/^static void updataDone (xref2osjob_t osjob) {$/;"	f	file:	signature:(xref2osjob_t osjob)
updateTx	src/lmic.c	/^static void updateTx (ostime_t txbeg) {$/;"	f	file:	signature:(ostime_t txbeg)
updr2rps	inc/lorabase.h	/^inline rps_t updr2rps (dr_t dr) { return (rps_t)_DR2RPS_CRC[dr+1]; }$/;"	f	signature:(dr_t dr)
updr2rps	src/lmic.c	/^extern inline rps_t updr2rps (dr_t dr);$/;"	p	file:	signature:(dr_t dr)
uprpt	src/lmic.c	/^            u1_t uprpt  = opts[oidx+4] & MCMD_LADR_REPEAT_MASK;     \/\/ up repeat count$/;"	l
us2osticks	inc/oslmic.h	118;"	d
us2osticksCeil	inc/oslmic.h	124;"	d
us2osticksRound	inc/oslmic.h	125;"	d
usart_getchar	inc/gps.h	/^uint16_t usart_getchar(void);$/;"	p	signature:(void)
usart_init	inc/hal.h	/^void usart_init(void);$/;"	p	signature:(void)
usart_init	src/hal.c	/^void usart_init(void)$/;"	f	signature:(void)
usart_putchar	inc/hal.h	/^void usart_putchar(uint8_t ch);$/;"	p	signature:(uint8_t ch)
usart_putchar	src/hal.c	/^void usart_putchar(uint8_t ch)$/;"	f	signature:(uint8_t ch)
usart_putstr	inc/hal.h	/^void usart_putstr(char* str);$/;"	p	signature:(char* str)
usart_putstr	src/hal.c	/^void usart_putstr(char* str)$/;"	f	signature:(char* str)
usart_putstrP	inc/hal.h	/^void usart_putstrP(const char* str);$/;"	p	signature:(const char* str)
usart_putstrP	src/hal.c	/^void usart_putstrP(const char* str)$/;"	f	signature:(const char* str)
usart_rx_buffer	src/gps.c	/^static uint8_t usart_rx_buffer[USART_RX_BUFFER_SIZE];$/;"	v	file:
usart_tx_buffer	src/hal.c	/^static uint8_t usart_tx_buffer[USART_RX_BUFFER_SIZE];$/;"	v	file:
v	src/radio.c	/^    u1_t v = randbuf[i++];$/;"	l
v	src/radio.c	/^    u1_t v = readReg(RegVersion);$/;"	l
val	src/radio.c	/^    u1_t val = hal_spi(0x00);$/;"	l
validDR	inc/lorabase.h	/^inline bit_t validDR  (dr_t dr) { return _DR2RPS_CRC[dr+1]!=ILLEGAL_RPS; } \/\/ in range$/;"	f	signature:(dr_t dr)
validDR	src/lmic.c	/^extern inline dr_t  validDR  (dr_t dr);$/;"	p	file:	signature:(dr_t dr)
variable_A	src/gps.c	/^int variable_A = 23;$/;"	v
variable_goto	src/gps.c	/^int variable_goto = 12;$/;"	v
width	src/printf-stdarg.c	/^	register int width, pad;$/;"	l
writeBuf	src/radio.c	/^static void writeBuf (u1_t addr, xref2u1_t buf, u1_t len) {$/;"	f	file:	signature:(u1_t addr, xref2u1_t buf, u1_t len)
writeReg	src/radio.c	/^static void writeReg (u1_t addr, u1_t data ) {$/;"	f	file:	signature:(u1_t addr, u1_t data )
xchDrMap	inc/lmic.h	/^    u2_t        xchDrMap[MAX_XCHANNELS];   \/\/ extra channel datarate ranges  ---XXX: ditto$/;"	m	struct:lmic_t	access:public
xchFreq	inc/lmic.h	/^    u4_t        xchFreq[MAX_XCHANNELS];    \/\/ extra channel frequencies (if device is behind a repeater)$/;"	m	struct:lmic_t	access:public
xref2cu1_t	inc/oslmic.h	/^typedef        const u1_t* xref2cu1_t;$/;"	t
xref2u1_t	inc/oslmic.h	/^typedef              u1_t* xref2u1_t;$/;"	t
